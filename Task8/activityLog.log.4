12 Jul 2022 14:46:14,067 Executor task launch worker for task 134.0 in stage 10.0 (TID 965) - Task 965 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@4a7fc184
12 Jul 2022 14:46:14,067 Executor task launch worker for task 134.0 in stage 10.0 (TID 965) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

12 Jul 2022 14:46:14,067 Executor task launch worker for task 134.0 in stage 10.0 (TID 965) - Task 965 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@4a7fc184
12 Jul 2022 14:46:14,067 Executor task launch worker for task 134.0 in stage 10.0 (TID 965) - Writing shuffle index file for mapId 965 with length 1
12 Jul 2022 14:46:14,068 Executor task launch worker for task 134.0 in stage 10.0 (TID 965) - Shuffle index for mapId 965: [0]
12 Jul 2022 14:46:14,068 Executor task launch worker for task 134.0 in stage 10.0 (TID 965) - Finished task 134.0 in stage 10.0 (TID 965). 3956 bytes result sent to driver
12 Jul 2022 14:46:14,068 Executor task launch worker for task 134.0 in stage 10.0 (TID 965) - removing (10, 0) from stageTCMP
12 Jul 2022 14:46:14,068 dispatcher-event-loop-0 - parentName: , name: TaskSet_10.0, runningTasks: 0
12 Jul 2022 14:46:14,068 dispatcher-event-loop-0 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
12 Jul 2022 14:46:14,068 dispatcher-event-loop-0 - Moving to ANY after waiting for 0ms
12 Jul 2022 14:46:14,068 dispatcher-event-loop-0 - Starting task 135.0 in stage 10.0 (TID 966) (MTD-Minhnx12, executor driver, partition 135, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
12 Jul 2022 14:46:14,068 Executor task launch worker for task 135.0 in stage 10.0 (TID 966) - Running task 135.0 in stage 10.0 (TID 966)
12 Jul 2022 14:46:14,068 task-result-getter-1 - Finished task 134.0 in stage 10.0 (TID 965) in 5 ms on MTD-Minhnx12 (executor driver) (160/200)
12 Jul 2022 14:46:14,069 Executor task launch worker for task 135.0 in stage 10.0 (TID 966) - stageTCMP: (10, 0) -> 1
12 Jul 2022 14:46:14,069 dag-scheduler-event-loop - ShuffleMapTask finished on driver
12 Jul 2022 14:46:14,070 Executor task launch worker for task 135.0 in stage 10.0 (TID 966) - Fetching outputs for shuffle 6
12 Jul 2022 14:46:14,070 Executor task launch worker for task 135.0 in stage 10.0 (TID 966) - Convert map statuses for shuffle 6, mappers 0-1, partitions 135-136
12 Jul 2022 14:46:14,070 Executor task launch worker for task 135.0 in stage 10.0 (TID 966) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
12 Jul 2022 14:46:14,070 Executor task launch worker for task 135.0 in stage 10.0 (TID 966) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
12 Jul 2022 14:46:14,070 Executor task launch worker for task 135.0 in stage 10.0 (TID 966) - Started 0 remote fetches in 0 ms
12 Jul 2022 14:46:14,070 Executor task launch worker for task 135.0 in stage 10.0 (TID 966) - Start fetching local blocks: 
12 Jul 2022 14:46:14,070 Executor task launch worker for task 135.0 in stage 10.0 (TID 966) - Got local blocks in 0 ms
12 Jul 2022 14:46:14,071 Executor task launch worker for task 135.0 in stage 10.0 (TID 966) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

12 Jul 2022 14:46:14,071 Executor task launch worker for task 135.0 in stage 10.0 (TID 966) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

12 Jul 2022 14:46:14,071 Executor task launch worker for task 135.0 in stage 10.0 (TID 966) - Task 966 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@4ab8e87
12 Jul 2022 14:46:14,072 Executor task launch worker for task 135.0 in stage 10.0 (TID 966) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

12 Jul 2022 14:46:14,072 Executor task launch worker for task 135.0 in stage 10.0 (TID 966) - Task 966 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@4ab8e87
12 Jul 2022 14:46:14,072 Executor task launch worker for task 135.0 in stage 10.0 (TID 966) - Writing shuffle index file for mapId 966 with length 1
12 Jul 2022 14:46:14,072 Executor task launch worker for task 135.0 in stage 10.0 (TID 966) - Shuffle index for mapId 966: [0]
12 Jul 2022 14:46:14,072 Executor task launch worker for task 135.0 in stage 10.0 (TID 966) - Finished task 135.0 in stage 10.0 (TID 966). 3956 bytes result sent to driver
12 Jul 2022 14:46:14,072 Executor task launch worker for task 135.0 in stage 10.0 (TID 966) - removing (10, 0) from stageTCMP
12 Jul 2022 14:46:14,073 dispatcher-event-loop-0 - parentName: , name: TaskSet_10.0, runningTasks: 0
12 Jul 2022 14:46:14,073 dispatcher-event-loop-0 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
12 Jul 2022 14:46:14,073 dispatcher-event-loop-0 - Moving to ANY after waiting for 0ms
12 Jul 2022 14:46:14,073 dispatcher-event-loop-0 - Starting task 136.0 in stage 10.0 (TID 967) (MTD-Minhnx12, executor driver, partition 136, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
12 Jul 2022 14:46:14,073 Executor task launch worker for task 136.0 in stage 10.0 (TID 967) - Running task 136.0 in stage 10.0 (TID 967)
12 Jul 2022 14:46:14,073 task-result-getter-2 - Finished task 135.0 in stage 10.0 (TID 966) in 5 ms on MTD-Minhnx12 (executor driver) (161/200)
12 Jul 2022 14:46:14,073 Executor task launch worker for task 136.0 in stage 10.0 (TID 967) - stageTCMP: (10, 0) -> 1
12 Jul 2022 14:46:14,073 dag-scheduler-event-loop - ShuffleMapTask finished on driver
12 Jul 2022 14:46:14,074 Executor task launch worker for task 136.0 in stage 10.0 (TID 967) - Fetching outputs for shuffle 6
12 Jul 2022 14:46:14,074 Executor task launch worker for task 136.0 in stage 10.0 (TID 967) - Convert map statuses for shuffle 6, mappers 0-1, partitions 136-137
12 Jul 2022 14:46:14,075 Executor task launch worker for task 136.0 in stage 10.0 (TID 967) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
12 Jul 2022 14:46:14,075 Executor task launch worker for task 136.0 in stage 10.0 (TID 967) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
12 Jul 2022 14:46:14,075 Executor task launch worker for task 136.0 in stage 10.0 (TID 967) - Started 0 remote fetches in 0 ms
12 Jul 2022 14:46:14,075 Executor task launch worker for task 136.0 in stage 10.0 (TID 967) - Start fetching local blocks: 
12 Jul 2022 14:46:14,075 Executor task launch worker for task 136.0 in stage 10.0 (TID 967) - Got local blocks in 0 ms
12 Jul 2022 14:46:14,075 Executor task launch worker for task 136.0 in stage 10.0 (TID 967) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

12 Jul 2022 14:46:14,076 Executor task launch worker for task 136.0 in stage 10.0 (TID 967) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

12 Jul 2022 14:46:14,076 Executor task launch worker for task 136.0 in stage 10.0 (TID 967) - Task 967 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@3173147
12 Jul 2022 14:46:14,076 Executor task launch worker for task 136.0 in stage 10.0 (TID 967) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

12 Jul 2022 14:46:14,076 Executor task launch worker for task 136.0 in stage 10.0 (TID 967) - Task 967 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@3173147
12 Jul 2022 14:46:14,076 Executor task launch worker for task 136.0 in stage 10.0 (TID 967) - Writing shuffle index file for mapId 967 with length 1
12 Jul 2022 14:46:14,076 Executor task launch worker for task 136.0 in stage 10.0 (TID 967) - Shuffle index for mapId 967: [0]
12 Jul 2022 14:46:14,077 Executor task launch worker for task 136.0 in stage 10.0 (TID 967) - Finished task 136.0 in stage 10.0 (TID 967). 3956 bytes result sent to driver
12 Jul 2022 14:46:14,077 Executor task launch worker for task 136.0 in stage 10.0 (TID 967) - removing (10, 0) from stageTCMP
12 Jul 2022 14:46:14,077 dispatcher-event-loop-0 - parentName: , name: TaskSet_10.0, runningTasks: 0
12 Jul 2022 14:46:14,077 dispatcher-event-loop-0 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
12 Jul 2022 14:46:14,077 dispatcher-event-loop-0 - Moving to ANY after waiting for 0ms
12 Jul 2022 14:46:14,077 dispatcher-event-loop-0 - Starting task 138.0 in stage 10.0 (TID 968) (MTD-Minhnx12, executor driver, partition 138, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
12 Jul 2022 14:46:14,077 Executor task launch worker for task 138.0 in stage 10.0 (TID 968) - Running task 138.0 in stage 10.0 (TID 968)
12 Jul 2022 14:46:14,077 task-result-getter-3 - Finished task 136.0 in stage 10.0 (TID 967) in 4 ms on MTD-Minhnx12 (executor driver) (162/200)
12 Jul 2022 14:46:14,077 Executor task launch worker for task 138.0 in stage 10.0 (TID 968) - stageTCMP: (10, 0) -> 1
12 Jul 2022 14:46:14,077 dag-scheduler-event-loop - ShuffleMapTask finished on driver
12 Jul 2022 14:46:14,079 Executor task launch worker for task 138.0 in stage 10.0 (TID 968) - Fetching outputs for shuffle 6
12 Jul 2022 14:46:14,079 Executor task launch worker for task 138.0 in stage 10.0 (TID 968) - Convert map statuses for shuffle 6, mappers 0-1, partitions 138-139
12 Jul 2022 14:46:14,079 Executor task launch worker for task 138.0 in stage 10.0 (TID 968) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
12 Jul 2022 14:46:14,079 Executor task launch worker for task 138.0 in stage 10.0 (TID 968) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
12 Jul 2022 14:46:14,079 Executor task launch worker for task 138.0 in stage 10.0 (TID 968) - Started 0 remote fetches in 0 ms
12 Jul 2022 14:46:14,079 Executor task launch worker for task 138.0 in stage 10.0 (TID 968) - Start fetching local blocks: 
12 Jul 2022 14:46:14,079 Executor task launch worker for task 138.0 in stage 10.0 (TID 968) - Got local blocks in 0 ms
12 Jul 2022 14:46:14,079 Executor task launch worker for task 138.0 in stage 10.0 (TID 968) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

12 Jul 2022 14:46:14,080 Executor task launch worker for task 138.0 in stage 10.0 (TID 968) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

12 Jul 2022 14:46:14,080 Executor task launch worker for task 138.0 in stage 10.0 (TID 968) - Task 968 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@29773d1e
12 Jul 2022 14:46:14,080 Executor task launch worker for task 138.0 in stage 10.0 (TID 968) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

12 Jul 2022 14:46:14,080 Executor task launch worker for task 138.0 in stage 10.0 (TID 968) - Task 968 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@29773d1e
12 Jul 2022 14:46:14,080 Executor task launch worker for task 138.0 in stage 10.0 (TID 968) - Writing shuffle index file for mapId 968 with length 1
12 Jul 2022 14:46:14,081 Executor task launch worker for task 138.0 in stage 10.0 (TID 968) - Shuffle index for mapId 968: [0]
12 Jul 2022 14:46:14,081 Executor task launch worker for task 138.0 in stage 10.0 (TID 968) - Finished task 138.0 in stage 10.0 (TID 968). 3956 bytes result sent to driver
12 Jul 2022 14:46:14,081 Executor task launch worker for task 138.0 in stage 10.0 (TID 968) - removing (10, 0) from stageTCMP
12 Jul 2022 14:46:14,081 dispatcher-event-loop-0 - parentName: , name: TaskSet_10.0, runningTasks: 0
12 Jul 2022 14:46:14,081 dispatcher-event-loop-0 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
12 Jul 2022 14:46:14,081 dispatcher-event-loop-0 - Moving to ANY after waiting for 0ms
12 Jul 2022 14:46:14,081 dispatcher-event-loop-0 - Starting task 143.0 in stage 10.0 (TID 969) (MTD-Minhnx12, executor driver, partition 143, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
12 Jul 2022 14:46:14,081 Executor task launch worker for task 143.0 in stage 10.0 (TID 969) - Running task 143.0 in stage 10.0 (TID 969)
12 Jul 2022 14:46:14,081 task-result-getter-0 - Finished task 138.0 in stage 10.0 (TID 968) in 4 ms on MTD-Minhnx12 (executor driver) (163/200)
12 Jul 2022 14:46:14,082 Executor task launch worker for task 143.0 in stage 10.0 (TID 969) - stageTCMP: (10, 0) -> 1
12 Jul 2022 14:46:14,082 dag-scheduler-event-loop - ShuffleMapTask finished on driver
12 Jul 2022 14:46:14,083 Executor task launch worker for task 143.0 in stage 10.0 (TID 969) - Fetching outputs for shuffle 6
12 Jul 2022 14:46:14,083 Executor task launch worker for task 143.0 in stage 10.0 (TID 969) - Convert map statuses for shuffle 6, mappers 0-1, partitions 143-144
12 Jul 2022 14:46:14,083 Executor task launch worker for task 143.0 in stage 10.0 (TID 969) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
12 Jul 2022 14:46:14,083 Executor task launch worker for task 143.0 in stage 10.0 (TID 969) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
12 Jul 2022 14:46:14,083 Executor task launch worker for task 143.0 in stage 10.0 (TID 969) - Started 0 remote fetches in 0 ms
12 Jul 2022 14:46:14,083 Executor task launch worker for task 143.0 in stage 10.0 (TID 969) - Start fetching local blocks: 
12 Jul 2022 14:46:14,083 Executor task launch worker for task 143.0 in stage 10.0 (TID 969) - Got local blocks in 0 ms
12 Jul 2022 14:46:14,083 Executor task launch worker for task 143.0 in stage 10.0 (TID 969) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

12 Jul 2022 14:46:14,084 Executor task launch worker for task 143.0 in stage 10.0 (TID 969) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

12 Jul 2022 14:46:14,084 Executor task launch worker for task 143.0 in stage 10.0 (TID 969) - Task 969 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@7d797fdc
12 Jul 2022 14:46:14,084 Executor task launch worker for task 143.0 in stage 10.0 (TID 969) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

12 Jul 2022 14:46:14,085 Executor task launch worker for task 143.0 in stage 10.0 (TID 969) - Task 969 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@7d797fdc
12 Jul 2022 14:46:14,085 Executor task launch worker for task 143.0 in stage 10.0 (TID 969) - Writing shuffle index file for mapId 969 with length 1
12 Jul 2022 14:46:14,085 Executor task launch worker for task 143.0 in stage 10.0 (TID 969) - Shuffle index for mapId 969: [0]
12 Jul 2022 14:46:14,085 Executor task launch worker for task 143.0 in stage 10.0 (TID 969) - Finished task 143.0 in stage 10.0 (TID 969). 3956 bytes result sent to driver
12 Jul 2022 14:46:14,085 Executor task launch worker for task 143.0 in stage 10.0 (TID 969) - removing (10, 0) from stageTCMP
12 Jul 2022 14:46:14,085 dispatcher-event-loop-0 - parentName: , name: TaskSet_10.0, runningTasks: 0
12 Jul 2022 14:46:14,085 dispatcher-event-loop-0 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
12 Jul 2022 14:46:14,085 dispatcher-event-loop-0 - Moving to ANY after waiting for 0ms
12 Jul 2022 14:46:14,085 dispatcher-event-loop-0 - Starting task 144.0 in stage 10.0 (TID 970) (MTD-Minhnx12, executor driver, partition 144, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
12 Jul 2022 14:46:14,085 Executor task launch worker for task 144.0 in stage 10.0 (TID 970) - Running task 144.0 in stage 10.0 (TID 970)
12 Jul 2022 14:46:14,085 task-result-getter-1 - Finished task 143.0 in stage 10.0 (TID 969) in 4 ms on MTD-Minhnx12 (executor driver) (164/200)
12 Jul 2022 14:46:14,086 Executor task launch worker for task 144.0 in stage 10.0 (TID 970) - stageTCMP: (10, 0) -> 1
12 Jul 2022 14:46:14,086 dag-scheduler-event-loop - ShuffleMapTask finished on driver
12 Jul 2022 14:46:14,087 Executor task launch worker for task 144.0 in stage 10.0 (TID 970) - Fetching outputs for shuffle 6
12 Jul 2022 14:46:14,087 Executor task launch worker for task 144.0 in stage 10.0 (TID 970) - Convert map statuses for shuffle 6, mappers 0-1, partitions 144-145
12 Jul 2022 14:46:14,087 Executor task launch worker for task 144.0 in stage 10.0 (TID 970) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
12 Jul 2022 14:46:14,087 Executor task launch worker for task 144.0 in stage 10.0 (TID 970) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
12 Jul 2022 14:46:14,087 Executor task launch worker for task 144.0 in stage 10.0 (TID 970) - Started 0 remote fetches in 0 ms
12 Jul 2022 14:46:14,087 Executor task launch worker for task 144.0 in stage 10.0 (TID 970) - Start fetching local blocks: 
12 Jul 2022 14:46:14,087 Executor task launch worker for task 144.0 in stage 10.0 (TID 970) - Got local blocks in 0 ms
12 Jul 2022 14:46:14,088 Executor task launch worker for task 144.0 in stage 10.0 (TID 970) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

12 Jul 2022 14:46:14,088 Executor task launch worker for task 144.0 in stage 10.0 (TID 970) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

12 Jul 2022 14:46:14,088 Executor task launch worker for task 144.0 in stage 10.0 (TID 970) - Task 970 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@5e7de552
12 Jul 2022 14:46:14,089 Executor task launch worker for task 144.0 in stage 10.0 (TID 970) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

12 Jul 2022 14:46:14,089 Executor task launch worker for task 144.0 in stage 10.0 (TID 970) - Task 970 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@5e7de552
12 Jul 2022 14:46:14,089 Executor task launch worker for task 144.0 in stage 10.0 (TID 970) - Writing shuffle index file for mapId 970 with length 1
12 Jul 2022 14:46:14,089 Executor task launch worker for task 144.0 in stage 10.0 (TID 970) - Shuffle index for mapId 970: [0]
12 Jul 2022 14:46:14,089 Executor task launch worker for task 144.0 in stage 10.0 (TID 970) - Finished task 144.0 in stage 10.0 (TID 970). 3956 bytes result sent to driver
12 Jul 2022 14:46:14,089 Executor task launch worker for task 144.0 in stage 10.0 (TID 970) - removing (10, 0) from stageTCMP
12 Jul 2022 14:46:14,089 dispatcher-event-loop-0 - parentName: , name: TaskSet_10.0, runningTasks: 0
12 Jul 2022 14:46:14,089 dispatcher-event-loop-0 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
12 Jul 2022 14:46:14,089 dispatcher-event-loop-0 - Moving to ANY after waiting for 0ms
12 Jul 2022 14:46:14,089 dispatcher-event-loop-0 - Starting task 147.0 in stage 10.0 (TID 971) (MTD-Minhnx12, executor driver, partition 147, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
12 Jul 2022 14:46:14,090 Executor task launch worker for task 147.0 in stage 10.0 (TID 971) - Running task 147.0 in stage 10.0 (TID 971)
12 Jul 2022 14:46:14,090 task-result-getter-2 - Finished task 144.0 in stage 10.0 (TID 970) in 5 ms on MTD-Minhnx12 (executor driver) (165/200)
12 Jul 2022 14:46:14,090 Executor task launch worker for task 147.0 in stage 10.0 (TID 971) - stageTCMP: (10, 0) -> 1
12 Jul 2022 14:46:14,090 dag-scheduler-event-loop - ShuffleMapTask finished on driver
12 Jul 2022 14:46:14,091 Executor task launch worker for task 147.0 in stage 10.0 (TID 971) - Fetching outputs for shuffle 6
12 Jul 2022 14:46:14,091 Executor task launch worker for task 147.0 in stage 10.0 (TID 971) - Convert map statuses for shuffle 6, mappers 0-1, partitions 147-148
12 Jul 2022 14:46:14,091 Executor task launch worker for task 147.0 in stage 10.0 (TID 971) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
12 Jul 2022 14:46:14,091 Executor task launch worker for task 147.0 in stage 10.0 (TID 971) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
12 Jul 2022 14:46:14,091 Executor task launch worker for task 147.0 in stage 10.0 (TID 971) - Started 0 remote fetches in 0 ms
12 Jul 2022 14:46:14,091 Executor task launch worker for task 147.0 in stage 10.0 (TID 971) - Start fetching local blocks: 
12 Jul 2022 14:46:14,091 Executor task launch worker for task 147.0 in stage 10.0 (TID 971) - Got local blocks in 0 ms
12 Jul 2022 14:46:14,092 Executor task launch worker for task 147.0 in stage 10.0 (TID 971) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

12 Jul 2022 14:46:14,092 Executor task launch worker for task 147.0 in stage 10.0 (TID 971) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

12 Jul 2022 14:46:14,092 Executor task launch worker for task 147.0 in stage 10.0 (TID 971) - Task 971 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@590590cd
12 Jul 2022 14:46:14,093 Executor task launch worker for task 147.0 in stage 10.0 (TID 971) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

12 Jul 2022 14:46:14,093 Executor task launch worker for task 147.0 in stage 10.0 (TID 971) - Task 971 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@590590cd
12 Jul 2022 14:46:14,093 Executor task launch worker for task 147.0 in stage 10.0 (TID 971) - Writing shuffle index file for mapId 971 with length 1
12 Jul 2022 14:46:14,093 Executor task launch worker for task 147.0 in stage 10.0 (TID 971) - Shuffle index for mapId 971: [0]
12 Jul 2022 14:46:14,093 Executor task launch worker for task 147.0 in stage 10.0 (TID 971) - Finished task 147.0 in stage 10.0 (TID 971). 3956 bytes result sent to driver
12 Jul 2022 14:46:14,093 Executor task launch worker for task 147.0 in stage 10.0 (TID 971) - removing (10, 0) from stageTCMP
12 Jul 2022 14:46:14,093 dispatcher-event-loop-0 - parentName: , name: TaskSet_10.0, runningTasks: 0
12 Jul 2022 14:46:14,094 dispatcher-event-loop-0 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
12 Jul 2022 14:46:14,094 dispatcher-event-loop-0 - Moving to ANY after waiting for 0ms
12 Jul 2022 14:46:14,094 dispatcher-event-loop-0 - Starting task 150.0 in stage 10.0 (TID 972) (MTD-Minhnx12, executor driver, partition 150, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
12 Jul 2022 14:46:14,094 Executor task launch worker for task 150.0 in stage 10.0 (TID 972) - Running task 150.0 in stage 10.0 (TID 972)
12 Jul 2022 14:46:14,094 task-result-getter-3 - Finished task 147.0 in stage 10.0 (TID 971) in 5 ms on MTD-Minhnx12 (executor driver) (166/200)
12 Jul 2022 14:46:14,094 Executor task launch worker for task 150.0 in stage 10.0 (TID 972) - stageTCMP: (10, 0) -> 1
12 Jul 2022 14:46:14,094 dag-scheduler-event-loop - ShuffleMapTask finished on driver
12 Jul 2022 14:46:14,096 Executor task launch worker for task 150.0 in stage 10.0 (TID 972) - Fetching outputs for shuffle 6
12 Jul 2022 14:46:14,096 Executor task launch worker for task 150.0 in stage 10.0 (TID 972) - Convert map statuses for shuffle 6, mappers 0-1, partitions 150-151
12 Jul 2022 14:46:14,096 Executor task launch worker for task 150.0 in stage 10.0 (TID 972) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
12 Jul 2022 14:46:14,096 Executor task launch worker for task 150.0 in stage 10.0 (TID 972) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
12 Jul 2022 14:46:14,096 Executor task launch worker for task 150.0 in stage 10.0 (TID 972) - Started 0 remote fetches in 0 ms
12 Jul 2022 14:46:14,096 Executor task launch worker for task 150.0 in stage 10.0 (TID 972) - Start fetching local blocks: 
12 Jul 2022 14:46:14,096 Executor task launch worker for task 150.0 in stage 10.0 (TID 972) - Got local blocks in 0 ms
12 Jul 2022 14:46:14,097 Executor task launch worker for task 150.0 in stage 10.0 (TID 972) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

12 Jul 2022 14:46:14,098 Executor task launch worker for task 150.0 in stage 10.0 (TID 972) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

12 Jul 2022 14:46:14,098 Executor task launch worker for task 150.0 in stage 10.0 (TID 972) - Task 972 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@569e4ccb
12 Jul 2022 14:46:14,098 Executor task launch worker for task 150.0 in stage 10.0 (TID 972) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

12 Jul 2022 14:46:14,098 Executor task launch worker for task 150.0 in stage 10.0 (TID 972) - Task 972 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@569e4ccb
12 Jul 2022 14:46:14,098 Executor task launch worker for task 150.0 in stage 10.0 (TID 972) - Writing shuffle index file for mapId 972 with length 1
12 Jul 2022 14:46:14,099 Executor task launch worker for task 150.0 in stage 10.0 (TID 972) - Shuffle index for mapId 972: [0]
12 Jul 2022 14:46:14,099 Executor task launch worker for task 150.0 in stage 10.0 (TID 972) - Finished task 150.0 in stage 10.0 (TID 972). 3956 bytes result sent to driver
12 Jul 2022 14:46:14,099 Executor task launch worker for task 150.0 in stage 10.0 (TID 972) - removing (10, 0) from stageTCMP
12 Jul 2022 14:46:14,099 dispatcher-event-loop-0 - parentName: , name: TaskSet_10.0, runningTasks: 0
12 Jul 2022 14:46:14,099 dispatcher-event-loop-0 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
12 Jul 2022 14:46:14,099 dispatcher-event-loop-0 - Moving to ANY after waiting for 0ms
12 Jul 2022 14:46:14,099 dispatcher-event-loop-0 - Starting task 151.0 in stage 10.0 (TID 973) (MTD-Minhnx12, executor driver, partition 151, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
12 Jul 2022 14:46:14,100 Executor task launch worker for task 151.0 in stage 10.0 (TID 973) - Running task 151.0 in stage 10.0 (TID 973)
12 Jul 2022 14:46:14,100 task-result-getter-0 - Finished task 150.0 in stage 10.0 (TID 972) in 6 ms on MTD-Minhnx12 (executor driver) (167/200)
12 Jul 2022 14:46:14,100 Executor task launch worker for task 151.0 in stage 10.0 (TID 973) - stageTCMP: (10, 0) -> 1
12 Jul 2022 14:46:14,100 dag-scheduler-event-loop - ShuffleMapTask finished on driver
12 Jul 2022 14:46:14,102 Executor task launch worker for task 151.0 in stage 10.0 (TID 973) - Fetching outputs for shuffle 6
12 Jul 2022 14:46:14,102 Executor task launch worker for task 151.0 in stage 10.0 (TID 973) - Convert map statuses for shuffle 6, mappers 0-1, partitions 151-152
12 Jul 2022 14:46:14,102 Executor task launch worker for task 151.0 in stage 10.0 (TID 973) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
12 Jul 2022 14:46:14,102 Executor task launch worker for task 151.0 in stage 10.0 (TID 973) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
12 Jul 2022 14:46:14,102 Executor task launch worker for task 151.0 in stage 10.0 (TID 973) - Started 0 remote fetches in 0 ms
12 Jul 2022 14:46:14,102 Executor task launch worker for task 151.0 in stage 10.0 (TID 973) - Start fetching local blocks: 
12 Jul 2022 14:46:14,102 Executor task launch worker for task 151.0 in stage 10.0 (TID 973) - Got local blocks in 0 ms
12 Jul 2022 14:46:14,103 Executor task launch worker for task 151.0 in stage 10.0 (TID 973) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

12 Jul 2022 14:46:14,103 Executor task launch worker for task 151.0 in stage 10.0 (TID 973) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

12 Jul 2022 14:46:14,103 Executor task launch worker for task 151.0 in stage 10.0 (TID 973) - Task 973 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@76a97496
12 Jul 2022 14:46:14,104 Executor task launch worker for task 151.0 in stage 10.0 (TID 973) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

12 Jul 2022 14:46:14,104 Executor task launch worker for task 151.0 in stage 10.0 (TID 973) - Task 973 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@76a97496
12 Jul 2022 14:46:14,104 Executor task launch worker for task 151.0 in stage 10.0 (TID 973) - Writing shuffle index file for mapId 973 with length 1
12 Jul 2022 14:46:14,104 Executor task launch worker for task 151.0 in stage 10.0 (TID 973) - Shuffle index for mapId 973: [0]
12 Jul 2022 14:46:14,105 Executor task launch worker for task 151.0 in stage 10.0 (TID 973) - Finished task 151.0 in stage 10.0 (TID 973). 3956 bytes result sent to driver
12 Jul 2022 14:46:14,105 Executor task launch worker for task 151.0 in stage 10.0 (TID 973) - removing (10, 0) from stageTCMP
12 Jul 2022 14:46:14,105 dispatcher-event-loop-0 - parentName: , name: TaskSet_10.0, runningTasks: 0
12 Jul 2022 14:46:14,105 dispatcher-event-loop-0 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
12 Jul 2022 14:46:14,105 dispatcher-event-loop-0 - Moving to ANY after waiting for 0ms
12 Jul 2022 14:46:14,105 dispatcher-event-loop-0 - Starting task 152.0 in stage 10.0 (TID 974) (MTD-Minhnx12, executor driver, partition 152, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
12 Jul 2022 14:46:14,105 Executor task launch worker for task 152.0 in stage 10.0 (TID 974) - Running task 152.0 in stage 10.0 (TID 974)
12 Jul 2022 14:46:14,105 task-result-getter-1 - Finished task 151.0 in stage 10.0 (TID 973) in 6 ms on MTD-Minhnx12 (executor driver) (168/200)
12 Jul 2022 14:46:14,105 Executor task launch worker for task 152.0 in stage 10.0 (TID 974) - stageTCMP: (10, 0) -> 1
12 Jul 2022 14:46:14,106 dag-scheduler-event-loop - ShuffleMapTask finished on driver
12 Jul 2022 14:46:14,107 Executor task launch worker for task 152.0 in stage 10.0 (TID 974) - Fetching outputs for shuffle 6
12 Jul 2022 14:46:14,107 Executor task launch worker for task 152.0 in stage 10.0 (TID 974) - Convert map statuses for shuffle 6, mappers 0-1, partitions 152-153
12 Jul 2022 14:46:14,107 Executor task launch worker for task 152.0 in stage 10.0 (TID 974) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
12 Jul 2022 14:46:14,107 Executor task launch worker for task 152.0 in stage 10.0 (TID 974) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
12 Jul 2022 14:46:14,107 Executor task launch worker for task 152.0 in stage 10.0 (TID 974) - Started 0 remote fetches in 0 ms
12 Jul 2022 14:46:14,108 Executor task launch worker for task 152.0 in stage 10.0 (TID 974) - Start fetching local blocks: 
12 Jul 2022 14:46:14,108 Executor task launch worker for task 152.0 in stage 10.0 (TID 974) - Got local blocks in 0 ms
12 Jul 2022 14:46:14,108 Executor task launch worker for task 152.0 in stage 10.0 (TID 974) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

12 Jul 2022 14:46:14,109 Executor task launch worker for task 152.0 in stage 10.0 (TID 974) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

12 Jul 2022 14:46:14,109 Executor task launch worker for task 152.0 in stage 10.0 (TID 974) - Task 974 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@522d9a55
12 Jul 2022 14:46:14,110 Executor task launch worker for task 152.0 in stage 10.0 (TID 974) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

12 Jul 2022 14:46:14,110 Executor task launch worker for task 152.0 in stage 10.0 (TID 974) - Task 974 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@522d9a55
12 Jul 2022 14:46:14,110 Executor task launch worker for task 152.0 in stage 10.0 (TID 974) - Writing shuffle index file for mapId 974 with length 1
12 Jul 2022 14:46:14,110 Executor task launch worker for task 152.0 in stage 10.0 (TID 974) - Shuffle index for mapId 974: [0]
12 Jul 2022 14:46:14,110 Executor task launch worker for task 152.0 in stage 10.0 (TID 974) - Finished task 152.0 in stage 10.0 (TID 974). 3956 bytes result sent to driver
12 Jul 2022 14:46:14,110 Executor task launch worker for task 152.0 in stage 10.0 (TID 974) - removing (10, 0) from stageTCMP
12 Jul 2022 14:46:14,110 dispatcher-event-loop-0 - parentName: , name: TaskSet_10.0, runningTasks: 0
12 Jul 2022 14:46:14,111 dispatcher-event-loop-0 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
12 Jul 2022 14:46:14,111 dispatcher-event-loop-0 - Moving to ANY after waiting for 0ms
12 Jul 2022 14:46:14,111 dispatcher-event-loop-0 - Starting task 154.0 in stage 10.0 (TID 975) (MTD-Minhnx12, executor driver, partition 154, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
12 Jul 2022 14:46:14,111 Executor task launch worker for task 154.0 in stage 10.0 (TID 975) - Running task 154.0 in stage 10.0 (TID 975)
12 Jul 2022 14:46:14,111 task-result-getter-2 - Finished task 152.0 in stage 10.0 (TID 974) in 6 ms on MTD-Minhnx12 (executor driver) (169/200)
12 Jul 2022 14:46:14,111 Executor task launch worker for task 154.0 in stage 10.0 (TID 975) - stageTCMP: (10, 0) -> 1
12 Jul 2022 14:46:14,111 dag-scheduler-event-loop - ShuffleMapTask finished on driver
12 Jul 2022 14:46:14,113 Executor task launch worker for task 154.0 in stage 10.0 (TID 975) - Fetching outputs for shuffle 6
12 Jul 2022 14:46:14,113 Executor task launch worker for task 154.0 in stage 10.0 (TID 975) - Convert map statuses for shuffle 6, mappers 0-1, partitions 154-155
12 Jul 2022 14:46:14,113 Executor task launch worker for task 154.0 in stage 10.0 (TID 975) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
12 Jul 2022 14:46:14,113 Executor task launch worker for task 154.0 in stage 10.0 (TID 975) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
12 Jul 2022 14:46:14,113 Executor task launch worker for task 154.0 in stage 10.0 (TID 975) - Started 0 remote fetches in 0 ms
12 Jul 2022 14:46:14,113 Executor task launch worker for task 154.0 in stage 10.0 (TID 975) - Start fetching local blocks: 
12 Jul 2022 14:46:14,113 Executor task launch worker for task 154.0 in stage 10.0 (TID 975) - Got local blocks in 0 ms
12 Jul 2022 14:46:14,113 Executor task launch worker for task 154.0 in stage 10.0 (TID 975) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

12 Jul 2022 14:46:14,114 Executor task launch worker for task 154.0 in stage 10.0 (TID 975) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

12 Jul 2022 14:46:14,114 Executor task launch worker for task 154.0 in stage 10.0 (TID 975) - Task 975 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@451ea4c7
12 Jul 2022 14:46:14,115 Executor task launch worker for task 154.0 in stage 10.0 (TID 975) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

12 Jul 2022 14:46:14,115 Executor task launch worker for task 154.0 in stage 10.0 (TID 975) - Task 975 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@451ea4c7
12 Jul 2022 14:46:14,115 Executor task launch worker for task 154.0 in stage 10.0 (TID 975) - Writing shuffle index file for mapId 975 with length 1
12 Jul 2022 14:46:14,115 Executor task launch worker for task 154.0 in stage 10.0 (TID 975) - Shuffle index for mapId 975: [0]
12 Jul 2022 14:46:14,116 Executor task launch worker for task 154.0 in stage 10.0 (TID 975) - Finished task 154.0 in stage 10.0 (TID 975). 3956 bytes result sent to driver
12 Jul 2022 14:46:14,116 Executor task launch worker for task 154.0 in stage 10.0 (TID 975) - removing (10, 0) from stageTCMP
12 Jul 2022 14:46:14,116 dispatcher-event-loop-0 - parentName: , name: TaskSet_10.0, runningTasks: 0
12 Jul 2022 14:46:14,116 dispatcher-event-loop-0 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
12 Jul 2022 14:46:14,116 dispatcher-event-loop-0 - Moving to ANY after waiting for 0ms
12 Jul 2022 14:46:14,116 dispatcher-event-loop-0 - Starting task 155.0 in stage 10.0 (TID 976) (MTD-Minhnx12, executor driver, partition 155, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
12 Jul 2022 14:46:14,116 Executor task launch worker for task 155.0 in stage 10.0 (TID 976) - Running task 155.0 in stage 10.0 (TID 976)
12 Jul 2022 14:46:14,116 task-result-getter-3 - Finished task 154.0 in stage 10.0 (TID 975) in 5 ms on MTD-Minhnx12 (executor driver) (170/200)
12 Jul 2022 14:46:14,116 Executor task launch worker for task 155.0 in stage 10.0 (TID 976) - stageTCMP: (10, 0) -> 1
12 Jul 2022 14:46:14,116 dag-scheduler-event-loop - ShuffleMapTask finished on driver
12 Jul 2022 14:46:14,118 Executor task launch worker for task 155.0 in stage 10.0 (TID 976) - Fetching outputs for shuffle 6
12 Jul 2022 14:46:14,118 Executor task launch worker for task 155.0 in stage 10.0 (TID 976) - Convert map statuses for shuffle 6, mappers 0-1, partitions 155-156
12 Jul 2022 14:46:14,118 Executor task launch worker for task 155.0 in stage 10.0 (TID 976) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
12 Jul 2022 14:46:14,118 Executor task launch worker for task 155.0 in stage 10.0 (TID 976) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
12 Jul 2022 14:46:14,118 Executor task launch worker for task 155.0 in stage 10.0 (TID 976) - Started 0 remote fetches in 0 ms
12 Jul 2022 14:46:14,118 Executor task launch worker for task 155.0 in stage 10.0 (TID 976) - Start fetching local blocks: 
12 Jul 2022 14:46:14,118 Executor task launch worker for task 155.0 in stage 10.0 (TID 976) - Got local blocks in 0 ms
12 Jul 2022 14:46:14,119 Executor task launch worker for task 155.0 in stage 10.0 (TID 976) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

12 Jul 2022 14:46:14,120 Executor task launch worker for task 155.0 in stage 10.0 (TID 976) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

12 Jul 2022 14:46:14,120 Executor task launch worker for task 155.0 in stage 10.0 (TID 976) - Task 976 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@1e890b5d
12 Jul 2022 14:46:14,120 Executor task launch worker for task 155.0 in stage 10.0 (TID 976) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

12 Jul 2022 14:46:14,121 Executor task launch worker for task 155.0 in stage 10.0 (TID 976) - Task 976 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@1e890b5d
12 Jul 2022 14:46:14,121 Executor task launch worker for task 155.0 in stage 10.0 (TID 976) - Writing shuffle index file for mapId 976 with length 1
12 Jul 2022 14:46:14,121 Executor task launch worker for task 155.0 in stage 10.0 (TID 976) - Shuffle index for mapId 976: [0]
12 Jul 2022 14:46:14,121 Executor task launch worker for task 155.0 in stage 10.0 (TID 976) - Finished task 155.0 in stage 10.0 (TID 976). 3956 bytes result sent to driver
12 Jul 2022 14:46:14,121 Executor task launch worker for task 155.0 in stage 10.0 (TID 976) - removing (10, 0) from stageTCMP
12 Jul 2022 14:46:14,121 dispatcher-event-loop-0 - parentName: , name: TaskSet_10.0, runningTasks: 0
12 Jul 2022 14:46:14,121 dispatcher-event-loop-0 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
12 Jul 2022 14:46:14,121 dispatcher-event-loop-0 - Moving to ANY after waiting for 0ms
12 Jul 2022 14:46:14,122 dispatcher-event-loop-0 - Starting task 157.0 in stage 10.0 (TID 977) (MTD-Minhnx12, executor driver, partition 157, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
12 Jul 2022 14:46:14,122 Executor task launch worker for task 157.0 in stage 10.0 (TID 977) - Running task 157.0 in stage 10.0 (TID 977)
12 Jul 2022 14:46:14,122 task-result-getter-0 - Finished task 155.0 in stage 10.0 (TID 976) in 6 ms on MTD-Minhnx12 (executor driver) (171/200)
12 Jul 2022 14:46:14,122 Executor task launch worker for task 157.0 in stage 10.0 (TID 977) - stageTCMP: (10, 0) -> 1
12 Jul 2022 14:46:14,122 dag-scheduler-event-loop - ShuffleMapTask finished on driver
12 Jul 2022 14:46:14,124 Executor task launch worker for task 157.0 in stage 10.0 (TID 977) - Fetching outputs for shuffle 6
12 Jul 2022 14:46:14,124 Executor task launch worker for task 157.0 in stage 10.0 (TID 977) - Convert map statuses for shuffle 6, mappers 0-1, partitions 157-158
12 Jul 2022 14:46:14,124 Executor task launch worker for task 157.0 in stage 10.0 (TID 977) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
12 Jul 2022 14:46:14,124 Executor task launch worker for task 157.0 in stage 10.0 (TID 977) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
12 Jul 2022 14:46:14,124 Executor task launch worker for task 157.0 in stage 10.0 (TID 977) - Started 0 remote fetches in 0 ms
12 Jul 2022 14:46:14,124 Executor task launch worker for task 157.0 in stage 10.0 (TID 977) - Start fetching local blocks: 
12 Jul 2022 14:46:14,124 Executor task launch worker for task 157.0 in stage 10.0 (TID 977) - Got local blocks in 0 ms
12 Jul 2022 14:46:14,125 Executor task launch worker for task 157.0 in stage 10.0 (TID 977) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

12 Jul 2022 14:46:14,125 Executor task launch worker for task 157.0 in stage 10.0 (TID 977) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

12 Jul 2022 14:46:14,126 Executor task launch worker for task 157.0 in stage 10.0 (TID 977) - Task 977 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@2edff55f
12 Jul 2022 14:46:14,126 Executor task launch worker for task 157.0 in stage 10.0 (TID 977) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

12 Jul 2022 14:46:14,126 Executor task launch worker for task 157.0 in stage 10.0 (TID 977) - Task 977 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@2edff55f
12 Jul 2022 14:46:14,126 Executor task launch worker for task 157.0 in stage 10.0 (TID 977) - Writing shuffle index file for mapId 977 with length 1
12 Jul 2022 14:46:14,126 Executor task launch worker for task 157.0 in stage 10.0 (TID 977) - Shuffle index for mapId 977: [0]
12 Jul 2022 14:46:14,127 Executor task launch worker for task 157.0 in stage 10.0 (TID 977) - Finished task 157.0 in stage 10.0 (TID 977). 3956 bytes result sent to driver
12 Jul 2022 14:46:14,127 Executor task launch worker for task 157.0 in stage 10.0 (TID 977) - removing (10, 0) from stageTCMP
12 Jul 2022 14:46:14,127 dispatcher-event-loop-0 - parentName: , name: TaskSet_10.0, runningTasks: 0
12 Jul 2022 14:46:14,127 dispatcher-event-loop-0 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
12 Jul 2022 14:46:14,127 dispatcher-event-loop-0 - Moving to ANY after waiting for 0ms
12 Jul 2022 14:46:14,127 dispatcher-event-loop-0 - Starting task 158.0 in stage 10.0 (TID 978) (MTD-Minhnx12, executor driver, partition 158, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
12 Jul 2022 14:46:14,127 Executor task launch worker for task 158.0 in stage 10.0 (TID 978) - Running task 158.0 in stage 10.0 (TID 978)
12 Jul 2022 14:46:14,127 task-result-getter-1 - Finished task 157.0 in stage 10.0 (TID 977) in 6 ms on MTD-Minhnx12 (executor driver) (172/200)
12 Jul 2022 14:46:14,128 Executor task launch worker for task 158.0 in stage 10.0 (TID 978) - stageTCMP: (10, 0) -> 1
12 Jul 2022 14:46:14,128 dag-scheduler-event-loop - ShuffleMapTask finished on driver
12 Jul 2022 14:46:14,129 Executor task launch worker for task 158.0 in stage 10.0 (TID 978) - Fetching outputs for shuffle 6
12 Jul 2022 14:46:14,129 Executor task launch worker for task 158.0 in stage 10.0 (TID 978) - Convert map statuses for shuffle 6, mappers 0-1, partitions 158-159
12 Jul 2022 14:46:14,129 Executor task launch worker for task 158.0 in stage 10.0 (TID 978) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
12 Jul 2022 14:46:14,130 Executor task launch worker for task 158.0 in stage 10.0 (TID 978) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
12 Jul 2022 14:46:14,130 Executor task launch worker for task 158.0 in stage 10.0 (TID 978) - Started 0 remote fetches in 0 ms
12 Jul 2022 14:46:14,130 Executor task launch worker for task 158.0 in stage 10.0 (TID 978) - Start fetching local blocks: 
12 Jul 2022 14:46:14,130 Executor task launch worker for task 158.0 in stage 10.0 (TID 978) - Got local blocks in 0 ms
12 Jul 2022 14:46:14,130 Executor task launch worker for task 158.0 in stage 10.0 (TID 978) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

12 Jul 2022 14:46:14,131 Executor task launch worker for task 158.0 in stage 10.0 (TID 978) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

12 Jul 2022 14:46:14,131 Executor task launch worker for task 158.0 in stage 10.0 (TID 978) - Task 978 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@60996da7
12 Jul 2022 14:46:14,131 Executor task launch worker for task 158.0 in stage 10.0 (TID 978) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

12 Jul 2022 14:46:14,131 Executor task launch worker for task 158.0 in stage 10.0 (TID 978) - Task 978 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@60996da7
12 Jul 2022 14:46:14,131 Executor task launch worker for task 158.0 in stage 10.0 (TID 978) - Writing shuffle index file for mapId 978 with length 1
12 Jul 2022 14:46:14,131 Executor task launch worker for task 158.0 in stage 10.0 (TID 978) - Shuffle index for mapId 978: [0]
12 Jul 2022 14:46:14,132 Executor task launch worker for task 158.0 in stage 10.0 (TID 978) - Finished task 158.0 in stage 10.0 (TID 978). 3956 bytes result sent to driver
12 Jul 2022 14:46:14,132 Executor task launch worker for task 158.0 in stage 10.0 (TID 978) - removing (10, 0) from stageTCMP
12 Jul 2022 14:46:14,132 dispatcher-event-loop-0 - parentName: , name: TaskSet_10.0, runningTasks: 0
12 Jul 2022 14:46:14,132 dispatcher-event-loop-0 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
12 Jul 2022 14:46:14,132 dispatcher-event-loop-0 - Moving to ANY after waiting for 0ms
12 Jul 2022 14:46:14,132 dispatcher-event-loop-0 - Starting task 159.0 in stage 10.0 (TID 979) (MTD-Minhnx12, executor driver, partition 159, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
12 Jul 2022 14:46:14,132 Executor task launch worker for task 159.0 in stage 10.0 (TID 979) - Running task 159.0 in stage 10.0 (TID 979)
12 Jul 2022 14:46:14,132 task-result-getter-2 - Finished task 158.0 in stage 10.0 (TID 978) in 5 ms on MTD-Minhnx12 (executor driver) (173/200)
12 Jul 2022 14:46:14,132 Executor task launch worker for task 159.0 in stage 10.0 (TID 979) - stageTCMP: (10, 0) -> 1
12 Jul 2022 14:46:14,132 dag-scheduler-event-loop - ShuffleMapTask finished on driver
12 Jul 2022 14:46:14,134 Executor task launch worker for task 159.0 in stage 10.0 (TID 979) - Fetching outputs for shuffle 6
12 Jul 2022 14:46:14,134 Executor task launch worker for task 159.0 in stage 10.0 (TID 979) - Convert map statuses for shuffle 6, mappers 0-1, partitions 159-160
12 Jul 2022 14:46:14,134 Executor task launch worker for task 159.0 in stage 10.0 (TID 979) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
12 Jul 2022 14:46:14,134 Executor task launch worker for task 159.0 in stage 10.0 (TID 979) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
12 Jul 2022 14:46:14,134 Executor task launch worker for task 159.0 in stage 10.0 (TID 979) - Started 0 remote fetches in 0 ms
12 Jul 2022 14:46:14,134 Executor task launch worker for task 159.0 in stage 10.0 (TID 979) - Start fetching local blocks: 
12 Jul 2022 14:46:14,134 Executor task launch worker for task 159.0 in stage 10.0 (TID 979) - Got local blocks in 0 ms
12 Jul 2022 14:46:14,134 Executor task launch worker for task 159.0 in stage 10.0 (TID 979) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

12 Jul 2022 14:46:14,135 Executor task launch worker for task 159.0 in stage 10.0 (TID 979) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

12 Jul 2022 14:46:14,135 Executor task launch worker for task 159.0 in stage 10.0 (TID 979) - Task 979 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@2120f201
12 Jul 2022 14:46:14,135 Executor task launch worker for task 159.0 in stage 10.0 (TID 979) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

12 Jul 2022 14:46:14,135 Executor task launch worker for task 159.0 in stage 10.0 (TID 979) - Task 979 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@2120f201
12 Jul 2022 14:46:14,135 Executor task launch worker for task 159.0 in stage 10.0 (TID 979) - Writing shuffle index file for mapId 979 with length 1
12 Jul 2022 14:46:14,136 Executor task launch worker for task 159.0 in stage 10.0 (TID 979) - Shuffle index for mapId 979: [0]
12 Jul 2022 14:46:14,136 Executor task launch worker for task 159.0 in stage 10.0 (TID 979) - Finished task 159.0 in stage 10.0 (TID 979). 3956 bytes result sent to driver
12 Jul 2022 14:46:14,136 Executor task launch worker for task 159.0 in stage 10.0 (TID 979) - removing (10, 0) from stageTCMP
12 Jul 2022 14:46:14,136 dispatcher-event-loop-0 - parentName: , name: TaskSet_10.0, runningTasks: 0
12 Jul 2022 14:46:14,136 dispatcher-event-loop-0 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
12 Jul 2022 14:46:14,136 dispatcher-event-loop-0 - Moving to ANY after waiting for 0ms
12 Jul 2022 14:46:14,136 dispatcher-event-loop-0 - Starting task 161.0 in stage 10.0 (TID 980) (MTD-Minhnx12, executor driver, partition 161, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
12 Jul 2022 14:46:14,136 Executor task launch worker for task 161.0 in stage 10.0 (TID 980) - Running task 161.0 in stage 10.0 (TID 980)
12 Jul 2022 14:46:14,136 task-result-getter-3 - Finished task 159.0 in stage 10.0 (TID 979) in 4 ms on MTD-Minhnx12 (executor driver) (174/200)
12 Jul 2022 14:46:14,137 Executor task launch worker for task 161.0 in stage 10.0 (TID 980) - stageTCMP: (10, 0) -> 1
12 Jul 2022 14:46:14,137 dag-scheduler-event-loop - ShuffleMapTask finished on driver
12 Jul 2022 14:46:14,138 Executor task launch worker for task 161.0 in stage 10.0 (TID 980) - Fetching outputs for shuffle 6
12 Jul 2022 14:46:14,138 Executor task launch worker for task 161.0 in stage 10.0 (TID 980) - Convert map statuses for shuffle 6, mappers 0-1, partitions 161-162
12 Jul 2022 14:46:14,138 Executor task launch worker for task 161.0 in stage 10.0 (TID 980) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
12 Jul 2022 14:46:14,138 Executor task launch worker for task 161.0 in stage 10.0 (TID 980) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
12 Jul 2022 14:46:14,138 Executor task launch worker for task 161.0 in stage 10.0 (TID 980) - Started 0 remote fetches in 0 ms
12 Jul 2022 14:46:14,138 Executor task launch worker for task 161.0 in stage 10.0 (TID 980) - Start fetching local blocks: 
12 Jul 2022 14:46:14,138 Executor task launch worker for task 161.0 in stage 10.0 (TID 980) - Got local blocks in 0 ms
12 Jul 2022 14:46:14,138 Executor task launch worker for task 161.0 in stage 10.0 (TID 980) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

12 Jul 2022 14:46:14,139 Executor task launch worker for task 161.0 in stage 10.0 (TID 980) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

12 Jul 2022 14:46:14,139 Executor task launch worker for task 161.0 in stage 10.0 (TID 980) - Task 980 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@410ea65d
12 Jul 2022 14:46:14,140 Executor task launch worker for task 161.0 in stage 10.0 (TID 980) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

12 Jul 2022 14:46:14,140 Executor task launch worker for task 161.0 in stage 10.0 (TID 980) - Task 980 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@410ea65d
12 Jul 2022 14:46:14,140 Executor task launch worker for task 161.0 in stage 10.0 (TID 980) - Writing shuffle index file for mapId 980 with length 1
12 Jul 2022 14:46:14,140 Executor task launch worker for task 161.0 in stage 10.0 (TID 980) - Shuffle index for mapId 980: [0]
12 Jul 2022 14:46:14,140 Executor task launch worker for task 161.0 in stage 10.0 (TID 980) - Finished task 161.0 in stage 10.0 (TID 980). 3956 bytes result sent to driver
12 Jul 2022 14:46:14,140 Executor task launch worker for task 161.0 in stage 10.0 (TID 980) - removing (10, 0) from stageTCMP
12 Jul 2022 14:46:14,140 dispatcher-event-loop-0 - parentName: , name: TaskSet_10.0, runningTasks: 0
12 Jul 2022 14:46:14,140 dispatcher-event-loop-0 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
12 Jul 2022 14:46:14,140 dispatcher-event-loop-0 - Moving to ANY after waiting for 0ms
12 Jul 2022 14:46:14,140 dispatcher-event-loop-0 - Starting task 164.0 in stage 10.0 (TID 981) (MTD-Minhnx12, executor driver, partition 164, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
12 Jul 2022 14:46:14,141 Executor task launch worker for task 164.0 in stage 10.0 (TID 981) - Running task 164.0 in stage 10.0 (TID 981)
12 Jul 2022 14:46:14,141 task-result-getter-0 - Finished task 161.0 in stage 10.0 (TID 980) in 5 ms on MTD-Minhnx12 (executor driver) (175/200)
12 Jul 2022 14:46:14,141 Executor task launch worker for task 164.0 in stage 10.0 (TID 981) - stageTCMP: (10, 0) -> 1
12 Jul 2022 14:46:14,141 dag-scheduler-event-loop - ShuffleMapTask finished on driver
12 Jul 2022 14:46:14,142 Executor task launch worker for task 164.0 in stage 10.0 (TID 981) - Fetching outputs for shuffle 6
12 Jul 2022 14:46:14,142 Executor task launch worker for task 164.0 in stage 10.0 (TID 981) - Convert map statuses for shuffle 6, mappers 0-1, partitions 164-165
12 Jul 2022 14:46:14,142 Executor task launch worker for task 164.0 in stage 10.0 (TID 981) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
12 Jul 2022 14:46:14,142 Executor task launch worker for task 164.0 in stage 10.0 (TID 981) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
12 Jul 2022 14:46:14,142 Executor task launch worker for task 164.0 in stage 10.0 (TID 981) - Started 0 remote fetches in 0 ms
12 Jul 2022 14:46:14,142 Executor task launch worker for task 164.0 in stage 10.0 (TID 981) - Start fetching local blocks: 
12 Jul 2022 14:46:14,142 Executor task launch worker for task 164.0 in stage 10.0 (TID 981) - Got local blocks in 0 ms
12 Jul 2022 14:46:14,143 Executor task launch worker for task 164.0 in stage 10.0 (TID 981) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

12 Jul 2022 14:46:14,143 Executor task launch worker for task 164.0 in stage 10.0 (TID 981) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

12 Jul 2022 14:46:14,143 Executor task launch worker for task 164.0 in stage 10.0 (TID 981) - Task 981 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@6dbc6101
12 Jul 2022 14:46:14,144 Executor task launch worker for task 164.0 in stage 10.0 (TID 981) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

12 Jul 2022 14:46:14,144 Executor task launch worker for task 164.0 in stage 10.0 (TID 981) - Task 981 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@6dbc6101
12 Jul 2022 14:46:14,144 Executor task launch worker for task 164.0 in stage 10.0 (TID 981) - Writing shuffle index file for mapId 981 with length 1
12 Jul 2022 14:46:14,144 Executor task launch worker for task 164.0 in stage 10.0 (TID 981) - Shuffle index for mapId 981: [0]
12 Jul 2022 14:46:14,145 Executor task launch worker for task 164.0 in stage 10.0 (TID 981) - Finished task 164.0 in stage 10.0 (TID 981). 3956 bytes result sent to driver
12 Jul 2022 14:46:14,145 Executor task launch worker for task 164.0 in stage 10.0 (TID 981) - removing (10, 0) from stageTCMP
12 Jul 2022 14:46:14,145 dispatcher-event-loop-0 - parentName: , name: TaskSet_10.0, runningTasks: 0
12 Jul 2022 14:46:14,145 dispatcher-event-loop-0 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
12 Jul 2022 14:46:14,145 dispatcher-event-loop-0 - Moving to ANY after waiting for 0ms
12 Jul 2022 14:46:14,145 dispatcher-event-loop-0 - Starting task 166.0 in stage 10.0 (TID 982) (MTD-Minhnx12, executor driver, partition 166, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
12 Jul 2022 14:46:14,145 Executor task launch worker for task 166.0 in stage 10.0 (TID 982) - Running task 166.0 in stage 10.0 (TID 982)
12 Jul 2022 14:46:14,145 task-result-getter-1 - Finished task 164.0 in stage 10.0 (TID 981) in 5 ms on MTD-Minhnx12 (executor driver) (176/200)
12 Jul 2022 14:46:14,145 Executor task launch worker for task 166.0 in stage 10.0 (TID 982) - stageTCMP: (10, 0) -> 1
12 Jul 2022 14:46:14,145 dag-scheduler-event-loop - ShuffleMapTask finished on driver
12 Jul 2022 14:46:14,147 Executor task launch worker for task 166.0 in stage 10.0 (TID 982) - Fetching outputs for shuffle 6
12 Jul 2022 14:46:14,147 Executor task launch worker for task 166.0 in stage 10.0 (TID 982) - Convert map statuses for shuffle 6, mappers 0-1, partitions 166-167
12 Jul 2022 14:46:14,147 Executor task launch worker for task 166.0 in stage 10.0 (TID 982) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
12 Jul 2022 14:46:14,147 Executor task launch worker for task 166.0 in stage 10.0 (TID 982) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
12 Jul 2022 14:46:14,147 Executor task launch worker for task 166.0 in stage 10.0 (TID 982) - Started 0 remote fetches in 0 ms
12 Jul 2022 14:46:14,147 Executor task launch worker for task 166.0 in stage 10.0 (TID 982) - Start fetching local blocks: 
12 Jul 2022 14:46:14,147 Executor task launch worker for task 166.0 in stage 10.0 (TID 982) - Got local blocks in 0 ms
12 Jul 2022 14:46:14,148 Executor task launch worker for task 166.0 in stage 10.0 (TID 982) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

12 Jul 2022 14:46:14,149 Executor task launch worker for task 166.0 in stage 10.0 (TID 982) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

12 Jul 2022 14:46:14,149 Executor task launch worker for task 166.0 in stage 10.0 (TID 982) - Task 982 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@74b87fa6
12 Jul 2022 14:46:14,150 Executor task launch worker for task 166.0 in stage 10.0 (TID 982) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

12 Jul 2022 14:46:14,150 Executor task launch worker for task 166.0 in stage 10.0 (TID 982) - Task 982 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@74b87fa6
12 Jul 2022 14:46:14,150 Executor task launch worker for task 166.0 in stage 10.0 (TID 982) - Writing shuffle index file for mapId 982 with length 1
12 Jul 2022 14:46:14,150 Executor task launch worker for task 166.0 in stage 10.0 (TID 982) - Shuffle index for mapId 982: [0]
12 Jul 2022 14:46:14,150 Executor task launch worker for task 166.0 in stage 10.0 (TID 982) - Finished task 166.0 in stage 10.0 (TID 982). 3956 bytes result sent to driver
12 Jul 2022 14:46:14,150 Executor task launch worker for task 166.0 in stage 10.0 (TID 982) - removing (10, 0) from stageTCMP
12 Jul 2022 14:46:14,151 dispatcher-event-loop-0 - parentName: , name: TaskSet_10.0, runningTasks: 0
12 Jul 2022 14:46:14,151 dispatcher-event-loop-0 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
12 Jul 2022 14:46:14,151 dispatcher-event-loop-0 - Moving to ANY after waiting for 0ms
12 Jul 2022 14:46:14,151 dispatcher-event-loop-0 - Starting task 167.0 in stage 10.0 (TID 983) (MTD-Minhnx12, executor driver, partition 167, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
12 Jul 2022 14:46:14,151 Executor task launch worker for task 167.0 in stage 10.0 (TID 983) - Running task 167.0 in stage 10.0 (TID 983)
12 Jul 2022 14:46:14,151 task-result-getter-2 - Finished task 166.0 in stage 10.0 (TID 982) in 6 ms on MTD-Minhnx12 (executor driver) (177/200)
12 Jul 2022 14:46:14,151 Executor task launch worker for task 167.0 in stage 10.0 (TID 983) - stageTCMP: (10, 0) -> 1
12 Jul 2022 14:46:14,151 dag-scheduler-event-loop - ShuffleMapTask finished on driver
12 Jul 2022 14:46:14,153 Executor task launch worker for task 167.0 in stage 10.0 (TID 983) - Fetching outputs for shuffle 6
12 Jul 2022 14:46:14,153 Executor task launch worker for task 167.0 in stage 10.0 (TID 983) - Convert map statuses for shuffle 6, mappers 0-1, partitions 167-168
12 Jul 2022 14:46:14,153 Executor task launch worker for task 167.0 in stage 10.0 (TID 983) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
12 Jul 2022 14:46:14,153 Executor task launch worker for task 167.0 in stage 10.0 (TID 983) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
12 Jul 2022 14:46:14,153 Executor task launch worker for task 167.0 in stage 10.0 (TID 983) - Started 0 remote fetches in 0 ms
12 Jul 2022 14:46:14,153 Executor task launch worker for task 167.0 in stage 10.0 (TID 983) - Start fetching local blocks: 
12 Jul 2022 14:46:14,153 Executor task launch worker for task 167.0 in stage 10.0 (TID 983) - Got local blocks in 0 ms
12 Jul 2022 14:46:14,154 Executor task launch worker for task 167.0 in stage 10.0 (TID 983) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

12 Jul 2022 14:46:14,154 Executor task launch worker for task 167.0 in stage 10.0 (TID 983) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

12 Jul 2022 14:46:14,154 Executor task launch worker for task 167.0 in stage 10.0 (TID 983) - Task 983 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@5df19334
12 Jul 2022 14:46:14,155 Executor task launch worker for task 167.0 in stage 10.0 (TID 983) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

12 Jul 2022 14:46:14,155 Executor task launch worker for task 167.0 in stage 10.0 (TID 983) - Task 983 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@5df19334
12 Jul 2022 14:46:14,155 Executor task launch worker for task 167.0 in stage 10.0 (TID 983) - Writing shuffle index file for mapId 983 with length 1
12 Jul 2022 14:46:14,155 Executor task launch worker for task 167.0 in stage 10.0 (TID 983) - Shuffle index for mapId 983: [0]
12 Jul 2022 14:46:14,155 Executor task launch worker for task 167.0 in stage 10.0 (TID 983) - Finished task 167.0 in stage 10.0 (TID 983). 3956 bytes result sent to driver
12 Jul 2022 14:46:14,155 Executor task launch worker for task 167.0 in stage 10.0 (TID 983) - removing (10, 0) from stageTCMP
12 Jul 2022 14:46:14,155 dispatcher-event-loop-0 - parentName: , name: TaskSet_10.0, runningTasks: 0
12 Jul 2022 14:46:14,155 dispatcher-event-loop-0 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
12 Jul 2022 14:46:14,155 dispatcher-event-loop-0 - Moving to ANY after waiting for 0ms
12 Jul 2022 14:46:14,155 dispatcher-event-loop-0 - Starting task 168.0 in stage 10.0 (TID 984) (MTD-Minhnx12, executor driver, partition 168, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
12 Jul 2022 14:46:14,155 task-result-getter-3 - Finished task 167.0 in stage 10.0 (TID 983) in 4 ms on MTD-Minhnx12 (executor driver) (178/200)
12 Jul 2022 14:46:14,155 Executor task launch worker for task 168.0 in stage 10.0 (TID 984) - Running task 168.0 in stage 10.0 (TID 984)
12 Jul 2022 14:46:14,156 Executor task launch worker for task 168.0 in stage 10.0 (TID 984) - stageTCMP: (10, 0) -> 1
12 Jul 2022 14:46:14,156 dag-scheduler-event-loop - ShuffleMapTask finished on driver
12 Jul 2022 14:46:14,157 Executor task launch worker for task 168.0 in stage 10.0 (TID 984) - Fetching outputs for shuffle 6
12 Jul 2022 14:46:14,157 Executor task launch worker for task 168.0 in stage 10.0 (TID 984) - Convert map statuses for shuffle 6, mappers 0-1, partitions 168-169
12 Jul 2022 14:46:14,157 Executor task launch worker for task 168.0 in stage 10.0 (TID 984) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
12 Jul 2022 14:46:14,157 Executor task launch worker for task 168.0 in stage 10.0 (TID 984) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
12 Jul 2022 14:46:14,157 Executor task launch worker for task 168.0 in stage 10.0 (TID 984) - Started 0 remote fetches in 0 ms
12 Jul 2022 14:46:14,157 Executor task launch worker for task 168.0 in stage 10.0 (TID 984) - Start fetching local blocks: 
12 Jul 2022 14:46:14,157 Executor task launch worker for task 168.0 in stage 10.0 (TID 984) - Got local blocks in 0 ms
12 Jul 2022 14:46:14,157 Executor task launch worker for task 168.0 in stage 10.0 (TID 984) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

12 Jul 2022 14:46:14,158 Executor task launch worker for task 168.0 in stage 10.0 (TID 984) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

12 Jul 2022 14:46:14,158 Executor task launch worker for task 168.0 in stage 10.0 (TID 984) - Task 984 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@275be932
12 Jul 2022 14:46:14,158 Executor task launch worker for task 168.0 in stage 10.0 (TID 984) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

12 Jul 2022 14:46:14,158 Executor task launch worker for task 168.0 in stage 10.0 (TID 984) - Task 984 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@275be932
12 Jul 2022 14:46:14,158 Executor task launch worker for task 168.0 in stage 10.0 (TID 984) - Writing shuffle index file for mapId 984 with length 1
12 Jul 2022 14:46:14,159 Executor task launch worker for task 168.0 in stage 10.0 (TID 984) - Shuffle index for mapId 984: [0]
12 Jul 2022 14:46:14,159 Executor task launch worker for task 168.0 in stage 10.0 (TID 984) - Finished task 168.0 in stage 10.0 (TID 984). 3956 bytes result sent to driver
12 Jul 2022 14:46:14,159 Executor task launch worker for task 168.0 in stage 10.0 (TID 984) - removing (10, 0) from stageTCMP
12 Jul 2022 14:46:14,159 dispatcher-event-loop-0 - parentName: , name: TaskSet_10.0, runningTasks: 0
12 Jul 2022 14:46:14,159 dispatcher-event-loop-0 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
12 Jul 2022 14:46:14,159 dispatcher-event-loop-0 - Moving to ANY after waiting for 0ms
12 Jul 2022 14:46:14,159 dispatcher-event-loop-0 - Starting task 169.0 in stage 10.0 (TID 985) (MTD-Minhnx12, executor driver, partition 169, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
12 Jul 2022 14:46:14,159 Executor task launch worker for task 169.0 in stage 10.0 (TID 985) - Running task 169.0 in stage 10.0 (TID 985)
12 Jul 2022 14:46:14,159 task-result-getter-0 - Finished task 168.0 in stage 10.0 (TID 984) in 4 ms on MTD-Minhnx12 (executor driver) (179/200)
12 Jul 2022 14:46:14,159 Executor task launch worker for task 169.0 in stage 10.0 (TID 985) - stageTCMP: (10, 0) -> 1
12 Jul 2022 14:46:14,159 dag-scheduler-event-loop - ShuffleMapTask finished on driver
12 Jul 2022 14:46:14,161 Executor task launch worker for task 169.0 in stage 10.0 (TID 985) - Fetching outputs for shuffle 6
12 Jul 2022 14:46:14,161 Executor task launch worker for task 169.0 in stage 10.0 (TID 985) - Convert map statuses for shuffle 6, mappers 0-1, partitions 169-170
12 Jul 2022 14:46:14,161 Executor task launch worker for task 169.0 in stage 10.0 (TID 985) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
12 Jul 2022 14:46:14,161 Executor task launch worker for task 169.0 in stage 10.0 (TID 985) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
12 Jul 2022 14:46:14,161 Executor task launch worker for task 169.0 in stage 10.0 (TID 985) - Started 0 remote fetches in 0 ms
12 Jul 2022 14:46:14,161 Executor task launch worker for task 169.0 in stage 10.0 (TID 985) - Start fetching local blocks: 
12 Jul 2022 14:46:14,161 Executor task launch worker for task 169.0 in stage 10.0 (TID 985) - Got local blocks in 0 ms
12 Jul 2022 14:46:14,161 Executor task launch worker for task 169.0 in stage 10.0 (TID 985) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

12 Jul 2022 14:46:14,162 Executor task launch worker for task 169.0 in stage 10.0 (TID 985) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

12 Jul 2022 14:46:14,162 Executor task launch worker for task 169.0 in stage 10.0 (TID 985) - Task 985 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@61795c1a
12 Jul 2022 14:46:14,162 Executor task launch worker for task 169.0 in stage 10.0 (TID 985) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

12 Jul 2022 14:46:14,162 Executor task launch worker for task 169.0 in stage 10.0 (TID 985) - Task 985 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@61795c1a
12 Jul 2022 14:46:14,162 Executor task launch worker for task 169.0 in stage 10.0 (TID 985) - Writing shuffle index file for mapId 985 with length 1
12 Jul 2022 14:46:14,162 Executor task launch worker for task 169.0 in stage 10.0 (TID 985) - Shuffle index for mapId 985: [0]
12 Jul 2022 14:46:14,163 Executor task launch worker for task 169.0 in stage 10.0 (TID 985) - Finished task 169.0 in stage 10.0 (TID 985). 3956 bytes result sent to driver
12 Jul 2022 14:46:14,163 Executor task launch worker for task 169.0 in stage 10.0 (TID 985) - removing (10, 0) from stageTCMP
12 Jul 2022 14:46:14,163 dispatcher-event-loop-0 - parentName: , name: TaskSet_10.0, runningTasks: 0
12 Jul 2022 14:46:14,163 dispatcher-event-loop-0 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
12 Jul 2022 14:46:14,163 dispatcher-event-loop-0 - Moving to ANY after waiting for 0ms
12 Jul 2022 14:46:14,163 dispatcher-event-loop-0 - Starting task 171.0 in stage 10.0 (TID 986) (MTD-Minhnx12, executor driver, partition 171, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
12 Jul 2022 14:46:14,163 Executor task launch worker for task 171.0 in stage 10.0 (TID 986) - Running task 171.0 in stage 10.0 (TID 986)
12 Jul 2022 14:46:14,163 task-result-getter-1 - Finished task 169.0 in stage 10.0 (TID 985) in 4 ms on MTD-Minhnx12 (executor driver) (180/200)
12 Jul 2022 14:46:14,163 Executor task launch worker for task 171.0 in stage 10.0 (TID 986) - stageTCMP: (10, 0) -> 1
12 Jul 2022 14:46:14,163 dag-scheduler-event-loop - ShuffleMapTask finished on driver
12 Jul 2022 14:46:14,165 Executor task launch worker for task 171.0 in stage 10.0 (TID 986) - Fetching outputs for shuffle 6
12 Jul 2022 14:46:14,165 Executor task launch worker for task 171.0 in stage 10.0 (TID 986) - Convert map statuses for shuffle 6, mappers 0-1, partitions 171-172
12 Jul 2022 14:46:14,165 Executor task launch worker for task 171.0 in stage 10.0 (TID 986) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
12 Jul 2022 14:46:14,165 Executor task launch worker for task 171.0 in stage 10.0 (TID 986) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
12 Jul 2022 14:46:14,165 Executor task launch worker for task 171.0 in stage 10.0 (TID 986) - Started 0 remote fetches in 0 ms
12 Jul 2022 14:46:14,165 Executor task launch worker for task 171.0 in stage 10.0 (TID 986) - Start fetching local blocks: 
12 Jul 2022 14:46:14,165 Executor task launch worker for task 171.0 in stage 10.0 (TID 986) - Got local blocks in 0 ms
12 Jul 2022 14:46:14,165 Executor task launch worker for task 171.0 in stage 10.0 (TID 986) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

12 Jul 2022 14:46:14,166 Executor task launch worker for task 171.0 in stage 10.0 (TID 986) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

12 Jul 2022 14:46:14,166 Executor task launch worker for task 171.0 in stage 10.0 (TID 986) - Task 986 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@2834d603
12 Jul 2022 14:46:14,167 Executor task launch worker for task 171.0 in stage 10.0 (TID 986) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

12 Jul 2022 14:46:14,167 Executor task launch worker for task 171.0 in stage 10.0 (TID 986) - Task 986 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@2834d603
12 Jul 2022 14:46:14,167 Executor task launch worker for task 171.0 in stage 10.0 (TID 986) - Writing shuffle index file for mapId 986 with length 1
12 Jul 2022 14:46:14,167 Executor task launch worker for task 171.0 in stage 10.0 (TID 986) - Shuffle index for mapId 986: [0]
12 Jul 2022 14:46:14,168 Executor task launch worker for task 171.0 in stage 10.0 (TID 986) - Finished task 171.0 in stage 10.0 (TID 986). 3956 bytes result sent to driver
12 Jul 2022 14:46:14,168 Executor task launch worker for task 171.0 in stage 10.0 (TID 986) - removing (10, 0) from stageTCMP
12 Jul 2022 14:46:14,168 dispatcher-event-loop-0 - parentName: , name: TaskSet_10.0, runningTasks: 0
12 Jul 2022 14:46:14,168 dispatcher-event-loop-0 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
12 Jul 2022 14:46:14,168 dispatcher-event-loop-0 - Moving to ANY after waiting for 0ms
12 Jul 2022 14:46:14,168 dispatcher-event-loop-0 - Starting task 172.0 in stage 10.0 (TID 987) (MTD-Minhnx12, executor driver, partition 172, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
12 Jul 2022 14:46:14,168 Executor task launch worker for task 172.0 in stage 10.0 (TID 987) - Running task 172.0 in stage 10.0 (TID 987)
12 Jul 2022 14:46:14,168 task-result-getter-2 - Finished task 171.0 in stage 10.0 (TID 986) in 5 ms on MTD-Minhnx12 (executor driver) (181/200)
12 Jul 2022 14:46:14,168 Executor task launch worker for task 172.0 in stage 10.0 (TID 987) - stageTCMP: (10, 0) -> 1
12 Jul 2022 14:46:14,168 dag-scheduler-event-loop - ShuffleMapTask finished on driver
12 Jul 2022 14:46:14,170 Executor task launch worker for task 172.0 in stage 10.0 (TID 987) - Fetching outputs for shuffle 6
12 Jul 2022 14:46:14,170 Executor task launch worker for task 172.0 in stage 10.0 (TID 987) - Convert map statuses for shuffle 6, mappers 0-1, partitions 172-173
12 Jul 2022 14:46:14,170 Executor task launch worker for task 172.0 in stage 10.0 (TID 987) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
12 Jul 2022 14:46:14,170 Executor task launch worker for task 172.0 in stage 10.0 (TID 987) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
12 Jul 2022 14:46:14,170 Executor task launch worker for task 172.0 in stage 10.0 (TID 987) - Started 0 remote fetches in 0 ms
12 Jul 2022 14:46:14,170 Executor task launch worker for task 172.0 in stage 10.0 (TID 987) - Start fetching local blocks: 
12 Jul 2022 14:46:14,170 Executor task launch worker for task 172.0 in stage 10.0 (TID 987) - Got local blocks in 0 ms
12 Jul 2022 14:46:14,171 Executor task launch worker for task 172.0 in stage 10.0 (TID 987) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

12 Jul 2022 14:46:14,172 Executor task launch worker for task 172.0 in stage 10.0 (TID 987) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

12 Jul 2022 14:46:14,172 Executor task launch worker for task 172.0 in stage 10.0 (TID 987) - Task 987 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@42d3f3f4
12 Jul 2022 14:46:14,172 Executor task launch worker for task 172.0 in stage 10.0 (TID 987) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

12 Jul 2022 14:46:14,173 Executor task launch worker for task 172.0 in stage 10.0 (TID 987) - Task 987 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@42d3f3f4
12 Jul 2022 14:46:14,173 Executor task launch worker for task 172.0 in stage 10.0 (TID 987) - Writing shuffle index file for mapId 987 with length 1
12 Jul 2022 14:46:14,173 Executor task launch worker for task 172.0 in stage 10.0 (TID 987) - Shuffle index for mapId 987: [0]
12 Jul 2022 14:46:14,173 Executor task launch worker for task 172.0 in stage 10.0 (TID 987) - Finished task 172.0 in stage 10.0 (TID 987). 3956 bytes result sent to driver
12 Jul 2022 14:46:14,173 Executor task launch worker for task 172.0 in stage 10.0 (TID 987) - removing (10, 0) from stageTCMP
12 Jul 2022 14:46:14,173 dispatcher-event-loop-0 - parentName: , name: TaskSet_10.0, runningTasks: 0
12 Jul 2022 14:46:14,173 dispatcher-event-loop-0 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
12 Jul 2022 14:46:14,173 dispatcher-event-loop-0 - Moving to ANY after waiting for 0ms
12 Jul 2022 14:46:14,174 dispatcher-event-loop-0 - Starting task 173.0 in stage 10.0 (TID 988) (MTD-Minhnx12, executor driver, partition 173, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
12 Jul 2022 14:46:14,174 Executor task launch worker for task 173.0 in stage 10.0 (TID 988) - Running task 173.0 in stage 10.0 (TID 988)
12 Jul 2022 14:46:14,174 task-result-getter-3 - Finished task 172.0 in stage 10.0 (TID 987) in 6 ms on MTD-Minhnx12 (executor driver) (182/200)
12 Jul 2022 14:46:14,174 Executor task launch worker for task 173.0 in stage 10.0 (TID 988) - stageTCMP: (10, 0) -> 1
12 Jul 2022 14:46:14,174 dag-scheduler-event-loop - ShuffleMapTask finished on driver
12 Jul 2022 14:46:14,176 Executor task launch worker for task 173.0 in stage 10.0 (TID 988) - Fetching outputs for shuffle 6
12 Jul 2022 14:46:14,176 Executor task launch worker for task 173.0 in stage 10.0 (TID 988) - Convert map statuses for shuffle 6, mappers 0-1, partitions 173-174
12 Jul 2022 14:46:14,176 Executor task launch worker for task 173.0 in stage 10.0 (TID 988) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
12 Jul 2022 14:46:14,176 Executor task launch worker for task 173.0 in stage 10.0 (TID 988) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
12 Jul 2022 14:46:14,176 Executor task launch worker for task 173.0 in stage 10.0 (TID 988) - Started 0 remote fetches in 0 ms
12 Jul 2022 14:46:14,176 Executor task launch worker for task 173.0 in stage 10.0 (TID 988) - Start fetching local blocks: 
12 Jul 2022 14:46:14,176 Executor task launch worker for task 173.0 in stage 10.0 (TID 988) - Got local blocks in 0 ms
12 Jul 2022 14:46:14,177 Executor task launch worker for task 173.0 in stage 10.0 (TID 988) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

12 Jul 2022 14:46:14,177 Executor task launch worker for task 173.0 in stage 10.0 (TID 988) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

12 Jul 2022 14:46:14,178 Executor task launch worker for task 173.0 in stage 10.0 (TID 988) - Task 988 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@19ff239c
12 Jul 2022 14:46:14,178 Executor task launch worker for task 173.0 in stage 10.0 (TID 988) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

12 Jul 2022 14:46:14,178 Executor task launch worker for task 173.0 in stage 10.0 (TID 988) - Task 988 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@19ff239c
12 Jul 2022 14:46:14,178 Executor task launch worker for task 173.0 in stage 10.0 (TID 988) - Writing shuffle index file for mapId 988 with length 1
12 Jul 2022 14:46:14,179 Executor task launch worker for task 173.0 in stage 10.0 (TID 988) - Shuffle index for mapId 988: [0]
12 Jul 2022 14:46:14,179 Executor task launch worker for task 173.0 in stage 10.0 (TID 988) - Finished task 173.0 in stage 10.0 (TID 988). 3956 bytes result sent to driver
12 Jul 2022 14:46:14,179 Executor task launch worker for task 173.0 in stage 10.0 (TID 988) - removing (10, 0) from stageTCMP
12 Jul 2022 14:46:14,179 dispatcher-event-loop-0 - parentName: , name: TaskSet_10.0, runningTasks: 0
12 Jul 2022 14:46:14,179 dispatcher-event-loop-0 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
12 Jul 2022 14:46:14,179 dispatcher-event-loop-0 - Moving to ANY after waiting for 0ms
12 Jul 2022 14:46:14,179 dispatcher-event-loop-0 - Starting task 174.0 in stage 10.0 (TID 989) (MTD-Minhnx12, executor driver, partition 174, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
12 Jul 2022 14:46:14,179 Executor task launch worker for task 174.0 in stage 10.0 (TID 989) - Running task 174.0 in stage 10.0 (TID 989)
12 Jul 2022 14:46:14,179 task-result-getter-0 - Finished task 173.0 in stage 10.0 (TID 988) in 6 ms on MTD-Minhnx12 (executor driver) (183/200)
12 Jul 2022 14:46:14,180 Executor task launch worker for task 174.0 in stage 10.0 (TID 989) - stageTCMP: (10, 0) -> 1
12 Jul 2022 14:46:14,180 dag-scheduler-event-loop - ShuffleMapTask finished on driver
12 Jul 2022 14:46:14,181 Executor task launch worker for task 174.0 in stage 10.0 (TID 989) - Fetching outputs for shuffle 6
12 Jul 2022 14:46:14,181 Executor task launch worker for task 174.0 in stage 10.0 (TID 989) - Convert map statuses for shuffle 6, mappers 0-1, partitions 174-175
12 Jul 2022 14:46:14,181 Executor task launch worker for task 174.0 in stage 10.0 (TID 989) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
12 Jul 2022 14:46:14,181 Executor task launch worker for task 174.0 in stage 10.0 (TID 989) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
12 Jul 2022 14:46:14,181 Executor task launch worker for task 174.0 in stage 10.0 (TID 989) - Started 0 remote fetches in 0 ms
12 Jul 2022 14:46:14,181 Executor task launch worker for task 174.0 in stage 10.0 (TID 989) - Start fetching local blocks: 
12 Jul 2022 14:46:14,181 Executor task launch worker for task 174.0 in stage 10.0 (TID 989) - Got local blocks in 0 ms
12 Jul 2022 14:46:14,182 Executor task launch worker for task 174.0 in stage 10.0 (TID 989) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

12 Jul 2022 14:46:14,182 Executor task launch worker for task 174.0 in stage 10.0 (TID 989) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

12 Jul 2022 14:46:14,182 Executor task launch worker for task 174.0 in stage 10.0 (TID 989) - Task 989 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@2056a20b
12 Jul 2022 14:46:14,183 Executor task launch worker for task 174.0 in stage 10.0 (TID 989) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

12 Jul 2022 14:46:14,183 Executor task launch worker for task 174.0 in stage 10.0 (TID 989) - Task 989 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@2056a20b
12 Jul 2022 14:46:14,183 Executor task launch worker for task 174.0 in stage 10.0 (TID 989) - Writing shuffle index file for mapId 989 with length 1
12 Jul 2022 14:46:14,183 Executor task launch worker for task 174.0 in stage 10.0 (TID 989) - Shuffle index for mapId 989: [0]
12 Jul 2022 14:46:14,183 Executor task launch worker for task 174.0 in stage 10.0 (TID 989) - Finished task 174.0 in stage 10.0 (TID 989). 3956 bytes result sent to driver
12 Jul 2022 14:46:14,183 Executor task launch worker for task 174.0 in stage 10.0 (TID 989) - removing (10, 0) from stageTCMP
12 Jul 2022 14:46:14,183 dispatcher-event-loop-0 - parentName: , name: TaskSet_10.0, runningTasks: 0
12 Jul 2022 14:46:14,183 dispatcher-event-loop-0 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
12 Jul 2022 14:46:14,183 dispatcher-event-loop-0 - Moving to ANY after waiting for 0ms
12 Jul 2022 14:46:14,184 dispatcher-event-loop-0 - Starting task 175.0 in stage 10.0 (TID 990) (MTD-Minhnx12, executor driver, partition 175, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
12 Jul 2022 14:46:14,184 Executor task launch worker for task 175.0 in stage 10.0 (TID 990) - Running task 175.0 in stage 10.0 (TID 990)
12 Jul 2022 14:46:14,184 task-result-getter-1 - Finished task 174.0 in stage 10.0 (TID 989) in 5 ms on MTD-Minhnx12 (executor driver) (184/200)
12 Jul 2022 14:46:14,184 Executor task launch worker for task 175.0 in stage 10.0 (TID 990) - stageTCMP: (10, 0) -> 1
12 Jul 2022 14:46:14,184 dag-scheduler-event-loop - ShuffleMapTask finished on driver
12 Jul 2022 14:46:14,185 Executor task launch worker for task 175.0 in stage 10.0 (TID 990) - Fetching outputs for shuffle 6
12 Jul 2022 14:46:14,185 Executor task launch worker for task 175.0 in stage 10.0 (TID 990) - Convert map statuses for shuffle 6, mappers 0-1, partitions 175-176
12 Jul 2022 14:46:14,185 Executor task launch worker for task 175.0 in stage 10.0 (TID 990) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
12 Jul 2022 14:46:14,185 Executor task launch worker for task 175.0 in stage 10.0 (TID 990) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
12 Jul 2022 14:46:14,185 Executor task launch worker for task 175.0 in stage 10.0 (TID 990) - Started 0 remote fetches in 0 ms
12 Jul 2022 14:46:14,185 Executor task launch worker for task 175.0 in stage 10.0 (TID 990) - Start fetching local blocks: 
12 Jul 2022 14:46:14,185 Executor task launch worker for task 175.0 in stage 10.0 (TID 990) - Got local blocks in 0 ms
12 Jul 2022 14:46:14,186 Executor task launch worker for task 175.0 in stage 10.0 (TID 990) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

