12 Jul 2022 14:46:13,950 Executor task launch worker for task 72.0 in stage 10.0 (TID 940) - Writing shuffle index file for mapId 940 with length 1
12 Jul 2022 14:46:13,950 Executor task launch worker for task 72.0 in stage 10.0 (TID 940) - Shuffle index for mapId 940: [0]
12 Jul 2022 14:46:13,951 Executor task launch worker for task 72.0 in stage 10.0 (TID 940) - Finished task 72.0 in stage 10.0 (TID 940). 3956 bytes result sent to driver
12 Jul 2022 14:46:13,951 Executor task launch worker for task 72.0 in stage 10.0 (TID 940) - removing (10, 0) from stageTCMP
12 Jul 2022 14:46:13,951 dispatcher-event-loop-0 - parentName: , name: TaskSet_10.0, runningTasks: 0
12 Jul 2022 14:46:13,951 dispatcher-event-loop-0 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
12 Jul 2022 14:46:13,951 dispatcher-event-loop-0 - Moving to ANY after waiting for 0ms
12 Jul 2022 14:46:13,951 dispatcher-event-loop-0 - Starting task 74.0 in stage 10.0 (TID 941) (MTD-Minhnx12, executor driver, partition 74, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
12 Jul 2022 14:46:13,951 Executor task launch worker for task 74.0 in stage 10.0 (TID 941) - Running task 74.0 in stage 10.0 (TID 941)
12 Jul 2022 14:46:13,951 task-result-getter-0 - Finished task 72.0 in stage 10.0 (TID 940) in 5 ms on MTD-Minhnx12 (executor driver) (135/200)
12 Jul 2022 14:46:13,951 Executor task launch worker for task 74.0 in stage 10.0 (TID 941) - stageTCMP: (10, 0) -> 1
12 Jul 2022 14:46:13,951 dag-scheduler-event-loop - ShuffleMapTask finished on driver
12 Jul 2022 14:46:13,953 Executor task launch worker for task 74.0 in stage 10.0 (TID 941) - Fetching outputs for shuffle 6
12 Jul 2022 14:46:13,953 Executor task launch worker for task 74.0 in stage 10.0 (TID 941) - Convert map statuses for shuffle 6, mappers 0-1, partitions 74-75
12 Jul 2022 14:46:13,953 Executor task launch worker for task 74.0 in stage 10.0 (TID 941) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
12 Jul 2022 14:46:13,953 Executor task launch worker for task 74.0 in stage 10.0 (TID 941) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
12 Jul 2022 14:46:13,953 Executor task launch worker for task 74.0 in stage 10.0 (TID 941) - Started 0 remote fetches in 0 ms
12 Jul 2022 14:46:13,953 Executor task launch worker for task 74.0 in stage 10.0 (TID 941) - Start fetching local blocks: 
12 Jul 2022 14:46:13,953 Executor task launch worker for task 74.0 in stage 10.0 (TID 941) - Got local blocks in 0 ms
12 Jul 2022 14:46:13,954 Executor task launch worker for task 74.0 in stage 10.0 (TID 941) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

12 Jul 2022 14:46:13,954 Executor task launch worker for task 74.0 in stage 10.0 (TID 941) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

12 Jul 2022 14:46:13,954 Executor task launch worker for task 74.0 in stage 10.0 (TID 941) - Task 941 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@a4b1e58
12 Jul 2022 14:46:13,955 Executor task launch worker for task 74.0 in stage 10.0 (TID 941) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

12 Jul 2022 14:46:13,955 Executor task launch worker for task 74.0 in stage 10.0 (TID 941) - Task 941 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@a4b1e58
12 Jul 2022 14:46:13,955 Executor task launch worker for task 74.0 in stage 10.0 (TID 941) - Writing shuffle index file for mapId 941 with length 1
12 Jul 2022 14:46:13,955 Executor task launch worker for task 74.0 in stage 10.0 (TID 941) - Shuffle index for mapId 941: [0]
12 Jul 2022 14:46:13,955 Executor task launch worker for task 74.0 in stage 10.0 (TID 941) - Finished task 74.0 in stage 10.0 (TID 941). 3956 bytes result sent to driver
12 Jul 2022 14:46:13,955 Executor task launch worker for task 74.0 in stage 10.0 (TID 941) - removing (10, 0) from stageTCMP
12 Jul 2022 14:46:13,955 dispatcher-event-loop-0 - parentName: , name: TaskSet_10.0, runningTasks: 0
12 Jul 2022 14:46:13,956 dispatcher-event-loop-0 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
12 Jul 2022 14:46:13,956 dispatcher-event-loop-0 - Moving to ANY after waiting for 0ms
12 Jul 2022 14:46:13,956 dispatcher-event-loop-0 - Starting task 77.0 in stage 10.0 (TID 942) (MTD-Minhnx12, executor driver, partition 77, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
12 Jul 2022 14:46:13,956 Executor task launch worker for task 77.0 in stage 10.0 (TID 942) - Running task 77.0 in stage 10.0 (TID 942)
12 Jul 2022 14:46:13,956 task-result-getter-1 - Finished task 74.0 in stage 10.0 (TID 941) in 5 ms on MTD-Minhnx12 (executor driver) (136/200)
12 Jul 2022 14:46:13,956 Executor task launch worker for task 77.0 in stage 10.0 (TID 942) - stageTCMP: (10, 0) -> 1
12 Jul 2022 14:46:13,956 dag-scheduler-event-loop - ShuffleMapTask finished on driver
12 Jul 2022 14:46:13,957 Executor task launch worker for task 77.0 in stage 10.0 (TID 942) - Fetching outputs for shuffle 6
12 Jul 2022 14:46:13,957 Executor task launch worker for task 77.0 in stage 10.0 (TID 942) - Convert map statuses for shuffle 6, mappers 0-1, partitions 77-78
12 Jul 2022 14:46:13,958 Executor task launch worker for task 77.0 in stage 10.0 (TID 942) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
12 Jul 2022 14:46:13,958 Executor task launch worker for task 77.0 in stage 10.0 (TID 942) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
12 Jul 2022 14:46:13,958 Executor task launch worker for task 77.0 in stage 10.0 (TID 942) - Started 0 remote fetches in 0 ms
12 Jul 2022 14:46:13,958 Executor task launch worker for task 77.0 in stage 10.0 (TID 942) - Start fetching local blocks: 
12 Jul 2022 14:46:13,958 Executor task launch worker for task 77.0 in stage 10.0 (TID 942) - Got local blocks in 0 ms
12 Jul 2022 14:46:13,958 Executor task launch worker for task 77.0 in stage 10.0 (TID 942) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

12 Jul 2022 14:46:13,959 Executor task launch worker for task 77.0 in stage 10.0 (TID 942) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

12 Jul 2022 14:46:13,959 Executor task launch worker for task 77.0 in stage 10.0 (TID 942) - Task 942 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@6f66031
12 Jul 2022 14:46:13,959 Executor task launch worker for task 77.0 in stage 10.0 (TID 942) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

12 Jul 2022 14:46:13,959 Executor task launch worker for task 77.0 in stage 10.0 (TID 942) - Task 942 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@6f66031
12 Jul 2022 14:46:13,959 Executor task launch worker for task 77.0 in stage 10.0 (TID 942) - Writing shuffle index file for mapId 942 with length 1
12 Jul 2022 14:46:13,960 Executor task launch worker for task 77.0 in stage 10.0 (TID 942) - Shuffle index for mapId 942: [0]
12 Jul 2022 14:46:13,960 Executor task launch worker for task 77.0 in stage 10.0 (TID 942) - Finished task 77.0 in stage 10.0 (TID 942). 3956 bytes result sent to driver
12 Jul 2022 14:46:13,960 Executor task launch worker for task 77.0 in stage 10.0 (TID 942) - removing (10, 0) from stageTCMP
12 Jul 2022 14:46:13,960 dispatcher-event-loop-0 - parentName: , name: TaskSet_10.0, runningTasks: 0
12 Jul 2022 14:46:13,960 dispatcher-event-loop-0 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
12 Jul 2022 14:46:13,960 dispatcher-event-loop-0 - Moving to ANY after waiting for 0ms
12 Jul 2022 14:46:13,960 dispatcher-event-loop-0 - Starting task 78.0 in stage 10.0 (TID 943) (MTD-Minhnx12, executor driver, partition 78, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
12 Jul 2022 14:46:13,960 Executor task launch worker for task 78.0 in stage 10.0 (TID 943) - Running task 78.0 in stage 10.0 (TID 943)
12 Jul 2022 14:46:13,960 task-result-getter-2 - Finished task 77.0 in stage 10.0 (TID 942) in 4 ms on MTD-Minhnx12 (executor driver) (137/200)
12 Jul 2022 14:46:13,961 Executor task launch worker for task 78.0 in stage 10.0 (TID 943) - stageTCMP: (10, 0) -> 1
12 Jul 2022 14:46:13,961 dag-scheduler-event-loop - ShuffleMapTask finished on driver
12 Jul 2022 14:46:13,962 Executor task launch worker for task 78.0 in stage 10.0 (TID 943) - Fetching outputs for shuffle 6
12 Jul 2022 14:46:13,962 Executor task launch worker for task 78.0 in stage 10.0 (TID 943) - Convert map statuses for shuffle 6, mappers 0-1, partitions 78-79
12 Jul 2022 14:46:13,962 Executor task launch worker for task 78.0 in stage 10.0 (TID 943) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
12 Jul 2022 14:46:13,962 Executor task launch worker for task 78.0 in stage 10.0 (TID 943) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
12 Jul 2022 14:46:13,962 Executor task launch worker for task 78.0 in stage 10.0 (TID 943) - Started 0 remote fetches in 0 ms
12 Jul 2022 14:46:13,962 Executor task launch worker for task 78.0 in stage 10.0 (TID 943) - Start fetching local blocks: 
12 Jul 2022 14:46:13,962 Executor task launch worker for task 78.0 in stage 10.0 (TID 943) - Got local blocks in 0 ms
12 Jul 2022 14:46:13,963 Executor task launch worker for task 78.0 in stage 10.0 (TID 943) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

12 Jul 2022 14:46:13,963 Executor task launch worker for task 78.0 in stage 10.0 (TID 943) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

12 Jul 2022 14:46:13,964 Executor task launch worker for task 78.0 in stage 10.0 (TID 943) - Task 943 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@1f6e341a
12 Jul 2022 14:46:13,964 Executor task launch worker for task 78.0 in stage 10.0 (TID 943) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

12 Jul 2022 14:46:13,964 Executor task launch worker for task 78.0 in stage 10.0 (TID 943) - Task 943 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@1f6e341a
12 Jul 2022 14:46:13,964 Executor task launch worker for task 78.0 in stage 10.0 (TID 943) - Writing shuffle index file for mapId 943 with length 1
12 Jul 2022 14:46:13,964 Executor task launch worker for task 78.0 in stage 10.0 (TID 943) - Shuffle index for mapId 943: [0]
12 Jul 2022 14:46:13,965 Executor task launch worker for task 78.0 in stage 10.0 (TID 943) - Finished task 78.0 in stage 10.0 (TID 943). 3956 bytes result sent to driver
12 Jul 2022 14:46:13,965 Executor task launch worker for task 78.0 in stage 10.0 (TID 943) - removing (10, 0) from stageTCMP
12 Jul 2022 14:46:13,965 dispatcher-event-loop-0 - parentName: , name: TaskSet_10.0, runningTasks: 0
12 Jul 2022 14:46:13,965 dispatcher-event-loop-0 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
12 Jul 2022 14:46:13,965 dispatcher-event-loop-0 - Moving to ANY after waiting for 0ms
12 Jul 2022 14:46:13,965 dispatcher-event-loop-0 - Starting task 79.0 in stage 10.0 (TID 944) (MTD-Minhnx12, executor driver, partition 79, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
12 Jul 2022 14:46:13,965 Executor task launch worker for task 79.0 in stage 10.0 (TID 944) - Running task 79.0 in stage 10.0 (TID 944)
12 Jul 2022 14:46:13,965 task-result-getter-3 - Finished task 78.0 in stage 10.0 (TID 943) in 5 ms on MTD-Minhnx12 (executor driver) (138/200)
12 Jul 2022 14:46:13,965 Executor task launch worker for task 79.0 in stage 10.0 (TID 944) - stageTCMP: (10, 0) -> 1
12 Jul 2022 14:46:13,965 dag-scheduler-event-loop - ShuffleMapTask finished on driver
12 Jul 2022 14:46:13,967 Executor task launch worker for task 79.0 in stage 10.0 (TID 944) - Fetching outputs for shuffle 6
12 Jul 2022 14:46:13,967 Executor task launch worker for task 79.0 in stage 10.0 (TID 944) - Convert map statuses for shuffle 6, mappers 0-1, partitions 79-80
12 Jul 2022 14:46:13,967 Executor task launch worker for task 79.0 in stage 10.0 (TID 944) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
12 Jul 2022 14:46:13,967 Executor task launch worker for task 79.0 in stage 10.0 (TID 944) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
12 Jul 2022 14:46:13,967 Executor task launch worker for task 79.0 in stage 10.0 (TID 944) - Started 0 remote fetches in 0 ms
12 Jul 2022 14:46:13,967 Executor task launch worker for task 79.0 in stage 10.0 (TID 944) - Start fetching local blocks: 
12 Jul 2022 14:46:13,967 Executor task launch worker for task 79.0 in stage 10.0 (TID 944) - Got local blocks in 0 ms
12 Jul 2022 14:46:13,967 Executor task launch worker for task 79.0 in stage 10.0 (TID 944) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

12 Jul 2022 14:46:13,968 Executor task launch worker for task 79.0 in stage 10.0 (TID 944) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

12 Jul 2022 14:46:13,968 Executor task launch worker for task 79.0 in stage 10.0 (TID 944) - Task 944 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@5d796c63
12 Jul 2022 14:46:13,969 Executor task launch worker for task 79.0 in stage 10.0 (TID 944) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

12 Jul 2022 14:46:13,969 Executor task launch worker for task 79.0 in stage 10.0 (TID 944) - Task 944 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@5d796c63
12 Jul 2022 14:46:13,969 Executor task launch worker for task 79.0 in stage 10.0 (TID 944) - Writing shuffle index file for mapId 944 with length 1
12 Jul 2022 14:46:13,969 Executor task launch worker for task 79.0 in stage 10.0 (TID 944) - Shuffle index for mapId 944: [0]
12 Jul 2022 14:46:13,969 Executor task launch worker for task 79.0 in stage 10.0 (TID 944) - Finished task 79.0 in stage 10.0 (TID 944). 3956 bytes result sent to driver
12 Jul 2022 14:46:13,969 Executor task launch worker for task 79.0 in stage 10.0 (TID 944) - removing (10, 0) from stageTCMP
12 Jul 2022 14:46:13,969 dispatcher-event-loop-0 - parentName: , name: TaskSet_10.0, runningTasks: 0
12 Jul 2022 14:46:13,969 dispatcher-event-loop-0 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
12 Jul 2022 14:46:13,969 dispatcher-event-loop-0 - Moving to ANY after waiting for 0ms
12 Jul 2022 14:46:13,970 dispatcher-event-loop-0 - Starting task 83.0 in stage 10.0 (TID 945) (MTD-Minhnx12, executor driver, partition 83, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
12 Jul 2022 14:46:13,970 Executor task launch worker for task 83.0 in stage 10.0 (TID 945) - Running task 83.0 in stage 10.0 (TID 945)
12 Jul 2022 14:46:13,970 task-result-getter-0 - Finished task 79.0 in stage 10.0 (TID 944) in 5 ms on MTD-Minhnx12 (executor driver) (139/200)
12 Jul 2022 14:46:13,970 Executor task launch worker for task 83.0 in stage 10.0 (TID 945) - stageTCMP: (10, 0) -> 1
12 Jul 2022 14:46:13,970 dag-scheduler-event-loop - ShuffleMapTask finished on driver
12 Jul 2022 14:46:13,971 Executor task launch worker for task 83.0 in stage 10.0 (TID 945) - Fetching outputs for shuffle 6
12 Jul 2022 14:46:13,971 Executor task launch worker for task 83.0 in stage 10.0 (TID 945) - Convert map statuses for shuffle 6, mappers 0-1, partitions 83-84
12 Jul 2022 14:46:13,972 Executor task launch worker for task 83.0 in stage 10.0 (TID 945) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
12 Jul 2022 14:46:13,972 Executor task launch worker for task 83.0 in stage 10.0 (TID 945) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
12 Jul 2022 14:46:13,972 Executor task launch worker for task 83.0 in stage 10.0 (TID 945) - Started 0 remote fetches in 0 ms
12 Jul 2022 14:46:13,972 Executor task launch worker for task 83.0 in stage 10.0 (TID 945) - Start fetching local blocks: 
12 Jul 2022 14:46:13,972 Executor task launch worker for task 83.0 in stage 10.0 (TID 945) - Got local blocks in 0 ms
12 Jul 2022 14:46:13,972 Executor task launch worker for task 83.0 in stage 10.0 (TID 945) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

12 Jul 2022 14:46:13,973 Executor task launch worker for task 83.0 in stage 10.0 (TID 945) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

12 Jul 2022 14:46:13,973 Executor task launch worker for task 83.0 in stage 10.0 (TID 945) - Task 945 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@6d22cb91
12 Jul 2022 14:46:13,973 Executor task launch worker for task 83.0 in stage 10.0 (TID 945) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

12 Jul 2022 14:46:13,973 Executor task launch worker for task 83.0 in stage 10.0 (TID 945) - Task 945 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@6d22cb91
12 Jul 2022 14:46:13,973 Executor task launch worker for task 83.0 in stage 10.0 (TID 945) - Writing shuffle index file for mapId 945 with length 1
12 Jul 2022 14:46:13,974 Executor task launch worker for task 83.0 in stage 10.0 (TID 945) - Shuffle index for mapId 945: [0]
12 Jul 2022 14:46:13,974 Executor task launch worker for task 83.0 in stage 10.0 (TID 945) - Finished task 83.0 in stage 10.0 (TID 945). 3956 bytes result sent to driver
12 Jul 2022 14:46:13,974 Executor task launch worker for task 83.0 in stage 10.0 (TID 945) - removing (10, 0) from stageTCMP
12 Jul 2022 14:46:13,974 dispatcher-event-loop-0 - parentName: , name: TaskSet_10.0, runningTasks: 0
12 Jul 2022 14:46:13,974 dispatcher-event-loop-0 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
12 Jul 2022 14:46:13,974 dispatcher-event-loop-0 - Moving to ANY after waiting for 0ms
12 Jul 2022 14:46:13,974 dispatcher-event-loop-0 - Starting task 87.0 in stage 10.0 (TID 946) (MTD-Minhnx12, executor driver, partition 87, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
12 Jul 2022 14:46:13,974 Executor task launch worker for task 87.0 in stage 10.0 (TID 946) - Running task 87.0 in stage 10.0 (TID 946)
12 Jul 2022 14:46:13,974 task-result-getter-1 - Finished task 83.0 in stage 10.0 (TID 945) in 5 ms on MTD-Minhnx12 (executor driver) (140/200)
12 Jul 2022 14:46:13,975 Executor task launch worker for task 87.0 in stage 10.0 (TID 946) - stageTCMP: (10, 0) -> 1
12 Jul 2022 14:46:13,975 dag-scheduler-event-loop - ShuffleMapTask finished on driver
12 Jul 2022 14:46:13,976 Executor task launch worker for task 87.0 in stage 10.0 (TID 946) - Fetching outputs for shuffle 6
12 Jul 2022 14:46:13,976 Executor task launch worker for task 87.0 in stage 10.0 (TID 946) - Convert map statuses for shuffle 6, mappers 0-1, partitions 87-88
12 Jul 2022 14:46:13,976 Executor task launch worker for task 87.0 in stage 10.0 (TID 946) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
12 Jul 2022 14:46:13,976 Executor task launch worker for task 87.0 in stage 10.0 (TID 946) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
12 Jul 2022 14:46:13,976 Executor task launch worker for task 87.0 in stage 10.0 (TID 946) - Started 0 remote fetches in 0 ms
12 Jul 2022 14:46:13,976 Executor task launch worker for task 87.0 in stage 10.0 (TID 946) - Start fetching local blocks: 
12 Jul 2022 14:46:13,976 Executor task launch worker for task 87.0 in stage 10.0 (TID 946) - Got local blocks in 0 ms
12 Jul 2022 14:46:13,977 Executor task launch worker for task 87.0 in stage 10.0 (TID 946) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

12 Jul 2022 14:46:13,978 Executor task launch worker for task 87.0 in stage 10.0 (TID 946) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

12 Jul 2022 14:46:13,978 Executor task launch worker for task 87.0 in stage 10.0 (TID 946) - Task 946 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@7c50098e
12 Jul 2022 14:46:13,978 Executor task launch worker for task 87.0 in stage 10.0 (TID 946) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

12 Jul 2022 14:46:13,978 Executor task launch worker for task 87.0 in stage 10.0 (TID 946) - Task 946 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@7c50098e
12 Jul 2022 14:46:13,978 Executor task launch worker for task 87.0 in stage 10.0 (TID 946) - Writing shuffle index file for mapId 946 with length 1
12 Jul 2022 14:46:13,978 Executor task launch worker for task 87.0 in stage 10.0 (TID 946) - Shuffle index for mapId 946: [0]
12 Jul 2022 14:46:13,979 Executor task launch worker for task 87.0 in stage 10.0 (TID 946) - Finished task 87.0 in stage 10.0 (TID 946). 3956 bytes result sent to driver
12 Jul 2022 14:46:13,979 Executor task launch worker for task 87.0 in stage 10.0 (TID 946) - removing (10, 0) from stageTCMP
12 Jul 2022 14:46:13,979 dispatcher-event-loop-0 - parentName: , name: TaskSet_10.0, runningTasks: 0
12 Jul 2022 14:46:13,979 dispatcher-event-loop-0 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
12 Jul 2022 14:46:13,979 dispatcher-event-loop-0 - Moving to ANY after waiting for 0ms
12 Jul 2022 14:46:13,979 dispatcher-event-loop-0 - Starting task 89.0 in stage 10.0 (TID 947) (MTD-Minhnx12, executor driver, partition 89, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
12 Jul 2022 14:46:13,979 Executor task launch worker for task 89.0 in stage 10.0 (TID 947) - Running task 89.0 in stage 10.0 (TID 947)
12 Jul 2022 14:46:13,979 task-result-getter-2 - Finished task 87.0 in stage 10.0 (TID 946) in 5 ms on MTD-Minhnx12 (executor driver) (141/200)
12 Jul 2022 14:46:13,979 Executor task launch worker for task 89.0 in stage 10.0 (TID 947) - stageTCMP: (10, 0) -> 1
12 Jul 2022 14:46:13,979 dag-scheduler-event-loop - ShuffleMapTask finished on driver
12 Jul 2022 14:46:13,981 Executor task launch worker for task 89.0 in stage 10.0 (TID 947) - Fetching outputs for shuffle 6
12 Jul 2022 14:46:13,981 Executor task launch worker for task 89.0 in stage 10.0 (TID 947) - Convert map statuses for shuffle 6, mappers 0-1, partitions 89-90
12 Jul 2022 14:46:13,981 Executor task launch worker for task 89.0 in stage 10.0 (TID 947) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
12 Jul 2022 14:46:13,981 Executor task launch worker for task 89.0 in stage 10.0 (TID 947) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
12 Jul 2022 14:46:13,981 Executor task launch worker for task 89.0 in stage 10.0 (TID 947) - Started 0 remote fetches in 0 ms
12 Jul 2022 14:46:13,981 Executor task launch worker for task 89.0 in stage 10.0 (TID 947) - Start fetching local blocks: 
12 Jul 2022 14:46:13,981 Executor task launch worker for task 89.0 in stage 10.0 (TID 947) - Got local blocks in 0 ms
12 Jul 2022 14:46:13,982 Executor task launch worker for task 89.0 in stage 10.0 (TID 947) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

12 Jul 2022 14:46:13,982 Executor task launch worker for task 89.0 in stage 10.0 (TID 947) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

12 Jul 2022 14:46:13,982 Executor task launch worker for task 89.0 in stage 10.0 (TID 947) - Task 947 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@6b8402f5
12 Jul 2022 14:46:13,983 Executor task launch worker for task 89.0 in stage 10.0 (TID 947) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

12 Jul 2022 14:46:13,983 Executor task launch worker for task 89.0 in stage 10.0 (TID 947) - Task 947 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@6b8402f5
12 Jul 2022 14:46:13,983 Executor task launch worker for task 89.0 in stage 10.0 (TID 947) - Writing shuffle index file for mapId 947 with length 1
12 Jul 2022 14:46:13,983 Executor task launch worker for task 89.0 in stage 10.0 (TID 947) - Shuffle index for mapId 947: [0]
12 Jul 2022 14:46:13,983 Executor task launch worker for task 89.0 in stage 10.0 (TID 947) - Finished task 89.0 in stage 10.0 (TID 947). 3956 bytes result sent to driver
12 Jul 2022 14:46:13,983 Executor task launch worker for task 89.0 in stage 10.0 (TID 947) - removing (10, 0) from stageTCMP
12 Jul 2022 14:46:13,984 dispatcher-event-loop-0 - parentName: , name: TaskSet_10.0, runningTasks: 0
12 Jul 2022 14:46:13,984 dispatcher-event-loop-0 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
12 Jul 2022 14:46:13,984 dispatcher-event-loop-0 - Moving to ANY after waiting for 0ms
12 Jul 2022 14:46:13,984 dispatcher-event-loop-0 - Starting task 92.0 in stage 10.0 (TID 948) (MTD-Minhnx12, executor driver, partition 92, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
12 Jul 2022 14:46:13,984 Executor task launch worker for task 92.0 in stage 10.0 (TID 948) - Running task 92.0 in stage 10.0 (TID 948)
12 Jul 2022 14:46:13,984 task-result-getter-3 - Finished task 89.0 in stage 10.0 (TID 947) in 5 ms on MTD-Minhnx12 (executor driver) (142/200)
12 Jul 2022 14:46:13,984 Executor task launch worker for task 92.0 in stage 10.0 (TID 948) - stageTCMP: (10, 0) -> 1
12 Jul 2022 14:46:13,984 dag-scheduler-event-loop - ShuffleMapTask finished on driver
12 Jul 2022 14:46:13,985 Executor task launch worker for task 92.0 in stage 10.0 (TID 948) - Fetching outputs for shuffle 6
12 Jul 2022 14:46:13,986 Executor task launch worker for task 92.0 in stage 10.0 (TID 948) - Convert map statuses for shuffle 6, mappers 0-1, partitions 92-93
12 Jul 2022 14:46:13,986 Executor task launch worker for task 92.0 in stage 10.0 (TID 948) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
12 Jul 2022 14:46:13,986 Executor task launch worker for task 92.0 in stage 10.0 (TID 948) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
12 Jul 2022 14:46:13,986 Executor task launch worker for task 92.0 in stage 10.0 (TID 948) - Started 0 remote fetches in 0 ms
12 Jul 2022 14:46:13,986 Executor task launch worker for task 92.0 in stage 10.0 (TID 948) - Start fetching local blocks: 
12 Jul 2022 14:46:13,986 Executor task launch worker for task 92.0 in stage 10.0 (TID 948) - Got local blocks in 0 ms
12 Jul 2022 14:46:13,986 Executor task launch worker for task 92.0 in stage 10.0 (TID 948) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

12 Jul 2022 14:46:13,987 Executor task launch worker for task 92.0 in stage 10.0 (TID 948) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

12 Jul 2022 14:46:13,987 Executor task launch worker for task 92.0 in stage 10.0 (TID 948) - Task 948 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@f1330f5
12 Jul 2022 14:46:13,988 Executor task launch worker for task 92.0 in stage 10.0 (TID 948) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

12 Jul 2022 14:46:13,988 Executor task launch worker for task 92.0 in stage 10.0 (TID 948) - Task 948 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@f1330f5
12 Jul 2022 14:46:13,988 Executor task launch worker for task 92.0 in stage 10.0 (TID 948) - Writing shuffle index file for mapId 948 with length 1
12 Jul 2022 14:46:13,988 Executor task launch worker for task 92.0 in stage 10.0 (TID 948) - Shuffle index for mapId 948: [0]
12 Jul 2022 14:46:13,988 Executor task launch worker for task 92.0 in stage 10.0 (TID 948) - Finished task 92.0 in stage 10.0 (TID 948). 3956 bytes result sent to driver
12 Jul 2022 14:46:13,988 Executor task launch worker for task 92.0 in stage 10.0 (TID 948) - removing (10, 0) from stageTCMP
12 Jul 2022 14:46:13,988 dispatcher-event-loop-0 - parentName: , name: TaskSet_10.0, runningTasks: 0
12 Jul 2022 14:46:13,988 dispatcher-event-loop-0 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
12 Jul 2022 14:46:13,988 dispatcher-event-loop-0 - Moving to ANY after waiting for 0ms
12 Jul 2022 14:46:13,989 dispatcher-event-loop-0 - Starting task 95.0 in stage 10.0 (TID 949) (MTD-Minhnx12, executor driver, partition 95, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
12 Jul 2022 14:46:13,989 Executor task launch worker for task 95.0 in stage 10.0 (TID 949) - Running task 95.0 in stage 10.0 (TID 949)
12 Jul 2022 14:46:13,989 task-result-getter-0 - Finished task 92.0 in stage 10.0 (TID 948) in 5 ms on MTD-Minhnx12 (executor driver) (143/200)
12 Jul 2022 14:46:13,989 Executor task launch worker for task 95.0 in stage 10.0 (TID 949) - stageTCMP: (10, 0) -> 1
12 Jul 2022 14:46:13,989 dag-scheduler-event-loop - ShuffleMapTask finished on driver
12 Jul 2022 14:46:13,990 Executor task launch worker for task 95.0 in stage 10.0 (TID 949) - Fetching outputs for shuffle 6
12 Jul 2022 14:46:13,990 Executor task launch worker for task 95.0 in stage 10.0 (TID 949) - Convert map statuses for shuffle 6, mappers 0-1, partitions 95-96
12 Jul 2022 14:46:13,990 Executor task launch worker for task 95.0 in stage 10.0 (TID 949) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
12 Jul 2022 14:46:13,990 Executor task launch worker for task 95.0 in stage 10.0 (TID 949) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
12 Jul 2022 14:46:13,990 Executor task launch worker for task 95.0 in stage 10.0 (TID 949) - Started 0 remote fetches in 0 ms
12 Jul 2022 14:46:13,990 Executor task launch worker for task 95.0 in stage 10.0 (TID 949) - Start fetching local blocks: 
12 Jul 2022 14:46:13,990 Executor task launch worker for task 95.0 in stage 10.0 (TID 949) - Got local blocks in 0 ms
12 Jul 2022 14:46:13,991 Executor task launch worker for task 95.0 in stage 10.0 (TID 949) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

12 Jul 2022 14:46:13,992 Executor task launch worker for task 95.0 in stage 10.0 (TID 949) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

12 Jul 2022 14:46:13,992 Executor task launch worker for task 95.0 in stage 10.0 (TID 949) - Task 949 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@76302193
12 Jul 2022 14:46:13,992 Executor task launch worker for task 95.0 in stage 10.0 (TID 949) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

12 Jul 2022 14:46:13,992 Executor task launch worker for task 95.0 in stage 10.0 (TID 949) - Task 949 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@76302193
12 Jul 2022 14:46:13,992 Executor task launch worker for task 95.0 in stage 10.0 (TID 949) - Writing shuffle index file for mapId 949 with length 1
12 Jul 2022 14:46:13,992 Executor task launch worker for task 95.0 in stage 10.0 (TID 949) - Shuffle index for mapId 949: [0]
12 Jul 2022 14:46:13,993 Executor task launch worker for task 95.0 in stage 10.0 (TID 949) - Finished task 95.0 in stage 10.0 (TID 949). 3956 bytes result sent to driver
12 Jul 2022 14:46:13,993 Executor task launch worker for task 95.0 in stage 10.0 (TID 949) - removing (10, 0) from stageTCMP
12 Jul 2022 14:46:13,993 dispatcher-event-loop-0 - parentName: , name: TaskSet_10.0, runningTasks: 0
12 Jul 2022 14:46:13,993 dispatcher-event-loop-0 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
12 Jul 2022 14:46:13,993 dispatcher-event-loop-0 - Moving to ANY after waiting for 0ms
12 Jul 2022 14:46:13,993 dispatcher-event-loop-0 - Starting task 97.0 in stage 10.0 (TID 950) (MTD-Minhnx12, executor driver, partition 97, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
12 Jul 2022 14:46:13,993 Executor task launch worker for task 97.0 in stage 10.0 (TID 950) - Running task 97.0 in stage 10.0 (TID 950)
12 Jul 2022 14:46:13,993 task-result-getter-1 - Finished task 95.0 in stage 10.0 (TID 949) in 5 ms on MTD-Minhnx12 (executor driver) (144/200)
12 Jul 2022 14:46:13,994 Executor task launch worker for task 97.0 in stage 10.0 (TID 950) - stageTCMP: (10, 0) -> 1
12 Jul 2022 14:46:13,994 dag-scheduler-event-loop - ShuffleMapTask finished on driver
12 Jul 2022 14:46:13,995 Executor task launch worker for task 97.0 in stage 10.0 (TID 950) - Fetching outputs for shuffle 6
12 Jul 2022 14:46:13,995 Executor task launch worker for task 97.0 in stage 10.0 (TID 950) - Convert map statuses for shuffle 6, mappers 0-1, partitions 97-98
12 Jul 2022 14:46:13,995 Executor task launch worker for task 97.0 in stage 10.0 (TID 950) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
12 Jul 2022 14:46:13,995 Executor task launch worker for task 97.0 in stage 10.0 (TID 950) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
12 Jul 2022 14:46:13,995 Executor task launch worker for task 97.0 in stage 10.0 (TID 950) - Started 0 remote fetches in 0 ms
12 Jul 2022 14:46:13,995 Executor task launch worker for task 97.0 in stage 10.0 (TID 950) - Start fetching local blocks: 
12 Jul 2022 14:46:13,995 Executor task launch worker for task 97.0 in stage 10.0 (TID 950) - Got local blocks in 0 ms
12 Jul 2022 14:46:13,996 Executor task launch worker for task 97.0 in stage 10.0 (TID 950) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

12 Jul 2022 14:46:13,996 Executor task launch worker for task 97.0 in stage 10.0 (TID 950) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

12 Jul 2022 14:46:13,996 Executor task launch worker for task 97.0 in stage 10.0 (TID 950) - Task 950 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@3594333b
12 Jul 2022 14:46:13,997 Executor task launch worker for task 97.0 in stage 10.0 (TID 950) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

12 Jul 2022 14:46:13,997 Executor task launch worker for task 97.0 in stage 10.0 (TID 950) - Task 950 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@3594333b
12 Jul 2022 14:46:13,997 Executor task launch worker for task 97.0 in stage 10.0 (TID 950) - Writing shuffle index file for mapId 950 with length 1
12 Jul 2022 14:46:13,997 Executor task launch worker for task 97.0 in stage 10.0 (TID 950) - Shuffle index for mapId 950: [0]
12 Jul 2022 14:46:13,997 Executor task launch worker for task 97.0 in stage 10.0 (TID 950) - Finished task 97.0 in stage 10.0 (TID 950). 3956 bytes result sent to driver
12 Jul 2022 14:46:13,998 Executor task launch worker for task 97.0 in stage 10.0 (TID 950) - removing (10, 0) from stageTCMP
12 Jul 2022 14:46:13,998 dispatcher-event-loop-0 - parentName: , name: TaskSet_10.0, runningTasks: 0
12 Jul 2022 14:46:13,998 dispatcher-event-loop-0 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
12 Jul 2022 14:46:13,998 dispatcher-event-loop-0 - Moving to ANY after waiting for 0ms
12 Jul 2022 14:46:13,998 dispatcher-event-loop-0 - Starting task 98.0 in stage 10.0 (TID 951) (MTD-Minhnx12, executor driver, partition 98, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
12 Jul 2022 14:46:13,998 Executor task launch worker for task 98.0 in stage 10.0 (TID 951) - Running task 98.0 in stage 10.0 (TID 951)
12 Jul 2022 14:46:13,998 task-result-getter-2 - Finished task 97.0 in stage 10.0 (TID 950) in 5 ms on MTD-Minhnx12 (executor driver) (145/200)
12 Jul 2022 14:46:13,998 Executor task launch worker for task 98.0 in stage 10.0 (TID 951) - stageTCMP: (10, 0) -> 1
12 Jul 2022 14:46:13,998 dag-scheduler-event-loop - ShuffleMapTask finished on driver
12 Jul 2022 14:46:14,000 Executor task launch worker for task 98.0 in stage 10.0 (TID 951) - Fetching outputs for shuffle 6
12 Jul 2022 14:46:14,000 Executor task launch worker for task 98.0 in stage 10.0 (TID 951) - Convert map statuses for shuffle 6, mappers 0-1, partitions 98-99
12 Jul 2022 14:46:14,000 Executor task launch worker for task 98.0 in stage 10.0 (TID 951) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
12 Jul 2022 14:46:14,000 Executor task launch worker for task 98.0 in stage 10.0 (TID 951) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
12 Jul 2022 14:46:14,000 Executor task launch worker for task 98.0 in stage 10.0 (TID 951) - Started 0 remote fetches in 0 ms
12 Jul 2022 14:46:14,000 Executor task launch worker for task 98.0 in stage 10.0 (TID 951) - Start fetching local blocks: 
12 Jul 2022 14:46:14,000 Executor task launch worker for task 98.0 in stage 10.0 (TID 951) - Got local blocks in 0 ms
12 Jul 2022 14:46:14,000 Executor task launch worker for task 98.0 in stage 10.0 (TID 951) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

12 Jul 2022 14:46:14,001 Executor task launch worker for task 98.0 in stage 10.0 (TID 951) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

12 Jul 2022 14:46:14,001 Executor task launch worker for task 98.0 in stage 10.0 (TID 951) - Task 951 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@308da5a3
12 Jul 2022 14:46:14,001 Executor task launch worker for task 98.0 in stage 10.0 (TID 951) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

12 Jul 2022 14:46:14,001 Executor task launch worker for task 98.0 in stage 10.0 (TID 951) - Task 951 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@308da5a3
12 Jul 2022 14:46:14,001 Executor task launch worker for task 98.0 in stage 10.0 (TID 951) - Writing shuffle index file for mapId 951 with length 1
12 Jul 2022 14:46:14,002 Executor task launch worker for task 98.0 in stage 10.0 (TID 951) - Shuffle index for mapId 951: [0]
12 Jul 2022 14:46:14,002 Executor task launch worker for task 98.0 in stage 10.0 (TID 951) - Finished task 98.0 in stage 10.0 (TID 951). 3956 bytes result sent to driver
12 Jul 2022 14:46:14,002 Executor task launch worker for task 98.0 in stage 10.0 (TID 951) - removing (10, 0) from stageTCMP
12 Jul 2022 14:46:14,002 dispatcher-event-loop-0 - parentName: , name: TaskSet_10.0, runningTasks: 0
12 Jul 2022 14:46:14,002 dispatcher-event-loop-0 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
12 Jul 2022 14:46:14,002 dispatcher-event-loop-0 - Moving to ANY after waiting for 0ms
12 Jul 2022 14:46:14,002 dispatcher-event-loop-0 - Starting task 101.0 in stage 10.0 (TID 952) (MTD-Minhnx12, executor driver, partition 101, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
12 Jul 2022 14:46:14,003 task-result-getter-3 - Finished task 98.0 in stage 10.0 (TID 951) in 4 ms on MTD-Minhnx12 (executor driver) (146/200)
12 Jul 2022 14:46:14,003 Executor task launch worker for task 101.0 in stage 10.0 (TID 952) - Running task 101.0 in stage 10.0 (TID 952)
12 Jul 2022 14:46:14,003 dag-scheduler-event-loop - ShuffleMapTask finished on driver
12 Jul 2022 14:46:14,003 Executor task launch worker for task 101.0 in stage 10.0 (TID 952) - stageTCMP: (10, 0) -> 1
12 Jul 2022 14:46:14,004 Executor task launch worker for task 101.0 in stage 10.0 (TID 952) - Fetching outputs for shuffle 6
12 Jul 2022 14:46:14,004 Executor task launch worker for task 101.0 in stage 10.0 (TID 952) - Convert map statuses for shuffle 6, mappers 0-1, partitions 101-102
12 Jul 2022 14:46:14,004 Executor task launch worker for task 101.0 in stage 10.0 (TID 952) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
12 Jul 2022 14:46:14,004 Executor task launch worker for task 101.0 in stage 10.0 (TID 952) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
12 Jul 2022 14:46:14,004 Executor task launch worker for task 101.0 in stage 10.0 (TID 952) - Started 0 remote fetches in 0 ms
12 Jul 2022 14:46:14,004 Executor task launch worker for task 101.0 in stage 10.0 (TID 952) - Start fetching local blocks: 
12 Jul 2022 14:46:14,004 Executor task launch worker for task 101.0 in stage 10.0 (TID 952) - Got local blocks in 0 ms
12 Jul 2022 14:46:14,005 Executor task launch worker for task 101.0 in stage 10.0 (TID 952) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

12 Jul 2022 14:46:14,005 Executor task launch worker for task 101.0 in stage 10.0 (TID 952) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

12 Jul 2022 14:46:14,006 Executor task launch worker for task 101.0 in stage 10.0 (TID 952) - Task 952 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@514253a7
12 Jul 2022 14:46:14,006 Executor task launch worker for task 101.0 in stage 10.0 (TID 952) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

12 Jul 2022 14:46:14,006 Executor task launch worker for task 101.0 in stage 10.0 (TID 952) - Task 952 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@514253a7
12 Jul 2022 14:46:14,006 Executor task launch worker for task 101.0 in stage 10.0 (TID 952) - Writing shuffle index file for mapId 952 with length 1
12 Jul 2022 14:46:14,006 Executor task launch worker for task 101.0 in stage 10.0 (TID 952) - Shuffle index for mapId 952: [0]
12 Jul 2022 14:46:14,007 Executor task launch worker for task 101.0 in stage 10.0 (TID 952) - Finished task 101.0 in stage 10.0 (TID 952). 3956 bytes result sent to driver
12 Jul 2022 14:46:14,007 Executor task launch worker for task 101.0 in stage 10.0 (TID 952) - removing (10, 0) from stageTCMP
12 Jul 2022 14:46:14,007 dispatcher-event-loop-0 - parentName: , name: TaskSet_10.0, runningTasks: 0
12 Jul 2022 14:46:14,007 dispatcher-event-loop-0 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
12 Jul 2022 14:46:14,007 dispatcher-event-loop-0 - Moving to ANY after waiting for 0ms
12 Jul 2022 14:46:14,007 dispatcher-event-loop-0 - Starting task 107.0 in stage 10.0 (TID 953) (MTD-Minhnx12, executor driver, partition 107, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
12 Jul 2022 14:46:14,007 Executor task launch worker for task 107.0 in stage 10.0 (TID 953) - Running task 107.0 in stage 10.0 (TID 953)
12 Jul 2022 14:46:14,007 task-result-getter-0 - Finished task 101.0 in stage 10.0 (TID 952) in 5 ms on MTD-Minhnx12 (executor driver) (147/200)
12 Jul 2022 14:46:14,007 Executor task launch worker for task 107.0 in stage 10.0 (TID 953) - stageTCMP: (10, 0) -> 1
12 Jul 2022 14:46:14,007 dag-scheduler-event-loop - ShuffleMapTask finished on driver
12 Jul 2022 14:46:14,009 Executor task launch worker for task 107.0 in stage 10.0 (TID 953) - Fetching outputs for shuffle 6
12 Jul 2022 14:46:14,009 Executor task launch worker for task 107.0 in stage 10.0 (TID 953) - Convert map statuses for shuffle 6, mappers 0-1, partitions 107-108
12 Jul 2022 14:46:14,009 Executor task launch worker for task 107.0 in stage 10.0 (TID 953) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
12 Jul 2022 14:46:14,009 Executor task launch worker for task 107.0 in stage 10.0 (TID 953) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
12 Jul 2022 14:46:14,009 Executor task launch worker for task 107.0 in stage 10.0 (TID 953) - Started 0 remote fetches in 0 ms
12 Jul 2022 14:46:14,009 Executor task launch worker for task 107.0 in stage 10.0 (TID 953) - Start fetching local blocks: 
12 Jul 2022 14:46:14,009 Executor task launch worker for task 107.0 in stage 10.0 (TID 953) - Got local blocks in 0 ms
12 Jul 2022 14:46:14,009 Executor task launch worker for task 107.0 in stage 10.0 (TID 953) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

12 Jul 2022 14:46:14,010 Executor task launch worker for task 107.0 in stage 10.0 (TID 953) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

12 Jul 2022 14:46:14,010 Executor task launch worker for task 107.0 in stage 10.0 (TID 953) - Task 953 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@1d46bc44
12 Jul 2022 14:46:14,010 Executor task launch worker for task 107.0 in stage 10.0 (TID 953) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

12 Jul 2022 14:46:14,010 Executor task launch worker for task 107.0 in stage 10.0 (TID 953) - Task 953 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@1d46bc44
12 Jul 2022 14:46:14,010 Executor task launch worker for task 107.0 in stage 10.0 (TID 953) - Writing shuffle index file for mapId 953 with length 1
12 Jul 2022 14:46:14,011 Executor task launch worker for task 107.0 in stage 10.0 (TID 953) - Shuffle index for mapId 953: [0]
12 Jul 2022 14:46:14,011 Executor task launch worker for task 107.0 in stage 10.0 (TID 953) - Finished task 107.0 in stage 10.0 (TID 953). 3956 bytes result sent to driver
12 Jul 2022 14:46:14,011 Executor task launch worker for task 107.0 in stage 10.0 (TID 953) - removing (10, 0) from stageTCMP
12 Jul 2022 14:46:14,011 dispatcher-event-loop-0 - parentName: , name: TaskSet_10.0, runningTasks: 0
12 Jul 2022 14:46:14,011 dispatcher-event-loop-0 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
12 Jul 2022 14:46:14,011 dispatcher-event-loop-0 - Moving to ANY after waiting for 0ms
12 Jul 2022 14:46:14,011 dispatcher-event-loop-0 - Starting task 109.0 in stage 10.0 (TID 954) (MTD-Minhnx12, executor driver, partition 109, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
12 Jul 2022 14:46:14,011 Executor task launch worker for task 109.0 in stage 10.0 (TID 954) - Running task 109.0 in stage 10.0 (TID 954)
12 Jul 2022 14:46:14,011 task-result-getter-1 - Finished task 107.0 in stage 10.0 (TID 953) in 4 ms on MTD-Minhnx12 (executor driver) (148/200)
12 Jul 2022 14:46:14,012 Executor task launch worker for task 109.0 in stage 10.0 (TID 954) - stageTCMP: (10, 0) -> 1
12 Jul 2022 14:46:14,012 dag-scheduler-event-loop - ShuffleMapTask finished on driver
12 Jul 2022 14:46:14,013 Executor task launch worker for task 109.0 in stage 10.0 (TID 954) - Fetching outputs for shuffle 6
12 Jul 2022 14:46:14,013 Executor task launch worker for task 109.0 in stage 10.0 (TID 954) - Convert map statuses for shuffle 6, mappers 0-1, partitions 109-110
12 Jul 2022 14:46:14,013 Executor task launch worker for task 109.0 in stage 10.0 (TID 954) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
12 Jul 2022 14:46:14,013 Executor task launch worker for task 109.0 in stage 10.0 (TID 954) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
12 Jul 2022 14:46:14,013 Executor task launch worker for task 109.0 in stage 10.0 (TID 954) - Started 0 remote fetches in 0 ms
12 Jul 2022 14:46:14,013 Executor task launch worker for task 109.0 in stage 10.0 (TID 954) - Start fetching local blocks: 
12 Jul 2022 14:46:14,013 Executor task launch worker for task 109.0 in stage 10.0 (TID 954) - Got local blocks in 0 ms
12 Jul 2022 14:46:14,014 Executor task launch worker for task 109.0 in stage 10.0 (TID 954) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

12 Jul 2022 14:46:14,014 Executor task launch worker for task 109.0 in stage 10.0 (TID 954) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

12 Jul 2022 14:46:14,014 Executor task launch worker for task 109.0 in stage 10.0 (TID 954) - Task 954 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@2a1cd728
12 Jul 2022 14:46:14,015 Executor task launch worker for task 109.0 in stage 10.0 (TID 954) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

12 Jul 2022 14:46:14,015 Executor task launch worker for task 109.0 in stage 10.0 (TID 954) - Task 954 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@2a1cd728
12 Jul 2022 14:46:14,015 Executor task launch worker for task 109.0 in stage 10.0 (TID 954) - Writing shuffle index file for mapId 954 with length 1
12 Jul 2022 14:46:14,015 Executor task launch worker for task 109.0 in stage 10.0 (TID 954) - Shuffle index for mapId 954: [0]
12 Jul 2022 14:46:14,015 Executor task launch worker for task 109.0 in stage 10.0 (TID 954) - Finished task 109.0 in stage 10.0 (TID 954). 3956 bytes result sent to driver
12 Jul 2022 14:46:14,015 Executor task launch worker for task 109.0 in stage 10.0 (TID 954) - removing (10, 0) from stageTCMP
12 Jul 2022 14:46:14,016 dispatcher-event-loop-0 - parentName: , name: TaskSet_10.0, runningTasks: 0
12 Jul 2022 14:46:14,016 dispatcher-event-loop-0 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
12 Jul 2022 14:46:14,016 dispatcher-event-loop-0 - Moving to ANY after waiting for 0ms
12 Jul 2022 14:46:14,016 dispatcher-event-loop-0 - Starting task 111.0 in stage 10.0 (TID 955) (MTD-Minhnx12, executor driver, partition 111, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
12 Jul 2022 14:46:14,016 Executor task launch worker for task 111.0 in stage 10.0 (TID 955) - Running task 111.0 in stage 10.0 (TID 955)
12 Jul 2022 14:46:14,016 task-result-getter-2 - Finished task 109.0 in stage 10.0 (TID 954) in 5 ms on MTD-Minhnx12 (executor driver) (149/200)
12 Jul 2022 14:46:14,016 Executor task launch worker for task 111.0 in stage 10.0 (TID 955) - stageTCMP: (10, 0) -> 1
12 Jul 2022 14:46:14,016 dag-scheduler-event-loop - ShuffleMapTask finished on driver
12 Jul 2022 14:46:14,017 Executor task launch worker for task 111.0 in stage 10.0 (TID 955) - Fetching outputs for shuffle 6
12 Jul 2022 14:46:14,017 Executor task launch worker for task 111.0 in stage 10.0 (TID 955) - Convert map statuses for shuffle 6, mappers 0-1, partitions 111-112
12 Jul 2022 14:46:14,018 Executor task launch worker for task 111.0 in stage 10.0 (TID 955) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
12 Jul 2022 14:46:14,018 Executor task launch worker for task 111.0 in stage 10.0 (TID 955) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
12 Jul 2022 14:46:14,018 Executor task launch worker for task 111.0 in stage 10.0 (TID 955) - Started 0 remote fetches in 0 ms
12 Jul 2022 14:46:14,018 Executor task launch worker for task 111.0 in stage 10.0 (TID 955) - Start fetching local blocks: 
12 Jul 2022 14:46:14,018 Executor task launch worker for task 111.0 in stage 10.0 (TID 955) - Got local blocks in 0 ms
12 Jul 2022 14:46:14,018 Executor task launch worker for task 111.0 in stage 10.0 (TID 955) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

12 Jul 2022 14:46:14,019 Executor task launch worker for task 111.0 in stage 10.0 (TID 955) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

12 Jul 2022 14:46:14,019 Executor task launch worker for task 111.0 in stage 10.0 (TID 955) - Task 955 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@245baf69
12 Jul 2022 14:46:14,019 Executor task launch worker for task 111.0 in stage 10.0 (TID 955) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

12 Jul 2022 14:46:14,019 Executor task launch worker for task 111.0 in stage 10.0 (TID 955) - Task 955 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@245baf69
12 Jul 2022 14:46:14,019 Executor task launch worker for task 111.0 in stage 10.0 (TID 955) - Writing shuffle index file for mapId 955 with length 1
12 Jul 2022 14:46:14,019 Executor task launch worker for task 111.0 in stage 10.0 (TID 955) - Shuffle index for mapId 955: [0]
12 Jul 2022 14:46:14,020 Executor task launch worker for task 111.0 in stage 10.0 (TID 955) - Finished task 111.0 in stage 10.0 (TID 955). 3956 bytes result sent to driver
12 Jul 2022 14:46:14,020 Executor task launch worker for task 111.0 in stage 10.0 (TID 955) - removing (10, 0) from stageTCMP
12 Jul 2022 14:46:14,020 dispatcher-event-loop-0 - parentName: , name: TaskSet_10.0, runningTasks: 0
12 Jul 2022 14:46:14,020 dispatcher-event-loop-0 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
12 Jul 2022 14:46:14,020 dispatcher-event-loop-0 - Moving to ANY after waiting for 0ms
12 Jul 2022 14:46:14,020 dispatcher-event-loop-0 - Starting task 112.0 in stage 10.0 (TID 956) (MTD-Minhnx12, executor driver, partition 112, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
12 Jul 2022 14:46:14,020 Executor task launch worker for task 112.0 in stage 10.0 (TID 956) - Running task 112.0 in stage 10.0 (TID 956)
12 Jul 2022 14:46:14,020 task-result-getter-3 - Finished task 111.0 in stage 10.0 (TID 955) in 4 ms on MTD-Minhnx12 (executor driver) (150/200)
12 Jul 2022 14:46:14,020 Executor task launch worker for task 112.0 in stage 10.0 (TID 956) - stageTCMP: (10, 0) -> 1
12 Jul 2022 14:46:14,021 dag-scheduler-event-loop - ShuffleMapTask finished on driver
12 Jul 2022 14:46:14,022 Executor task launch worker for task 112.0 in stage 10.0 (TID 956) - Fetching outputs for shuffle 6
12 Jul 2022 14:46:14,022 Executor task launch worker for task 112.0 in stage 10.0 (TID 956) - Convert map statuses for shuffle 6, mappers 0-1, partitions 112-113
12 Jul 2022 14:46:14,022 Executor task launch worker for task 112.0 in stage 10.0 (TID 956) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
12 Jul 2022 14:46:14,022 Executor task launch worker for task 112.0 in stage 10.0 (TID 956) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
12 Jul 2022 14:46:14,022 Executor task launch worker for task 112.0 in stage 10.0 (TID 956) - Started 0 remote fetches in 0 ms
12 Jul 2022 14:46:14,022 Executor task launch worker for task 112.0 in stage 10.0 (TID 956) - Start fetching local blocks: 
12 Jul 2022 14:46:14,022 Executor task launch worker for task 112.0 in stage 10.0 (TID 956) - Got local blocks in 0 ms
12 Jul 2022 14:46:14,022 Executor task launch worker for task 112.0 in stage 10.0 (TID 956) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

12 Jul 2022 14:46:14,023 Executor task launch worker for task 112.0 in stage 10.0 (TID 956) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

12 Jul 2022 14:46:14,023 Executor task launch worker for task 112.0 in stage 10.0 (TID 956) - Task 956 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@442a1810
12 Jul 2022 14:46:14,024 Executor task launch worker for task 112.0 in stage 10.0 (TID 956) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

12 Jul 2022 14:46:14,024 Executor task launch worker for task 112.0 in stage 10.0 (TID 956) - Task 956 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@442a1810
12 Jul 2022 14:46:14,024 Executor task launch worker for task 112.0 in stage 10.0 (TID 956) - Writing shuffle index file for mapId 956 with length 1
12 Jul 2022 14:46:14,024 Executor task launch worker for task 112.0 in stage 10.0 (TID 956) - Shuffle index for mapId 956: [0]
12 Jul 2022 14:46:14,024 Executor task launch worker for task 112.0 in stage 10.0 (TID 956) - Finished task 112.0 in stage 10.0 (TID 956). 3956 bytes result sent to driver
12 Jul 2022 14:46:14,024 Executor task launch worker for task 112.0 in stage 10.0 (TID 956) - removing (10, 0) from stageTCMP
12 Jul 2022 14:46:14,024 dispatcher-event-loop-0 - parentName: , name: TaskSet_10.0, runningTasks: 0
12 Jul 2022 14:46:14,024 dispatcher-event-loop-0 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
12 Jul 2022 14:46:14,024 dispatcher-event-loop-0 - Moving to ANY after waiting for 0ms
12 Jul 2022 14:46:14,025 dispatcher-event-loop-0 - Starting task 115.0 in stage 10.0 (TID 957) (MTD-Minhnx12, executor driver, partition 115, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
12 Jul 2022 14:46:14,025 Executor task launch worker for task 115.0 in stage 10.0 (TID 957) - Running task 115.0 in stage 10.0 (TID 957)
12 Jul 2022 14:46:14,025 task-result-getter-0 - Finished task 112.0 in stage 10.0 (TID 956) in 5 ms on MTD-Minhnx12 (executor driver) (151/200)
12 Jul 2022 14:46:14,025 Executor task launch worker for task 115.0 in stage 10.0 (TID 957) - stageTCMP: (10, 0) -> 1
12 Jul 2022 14:46:14,025 dag-scheduler-event-loop - ShuffleMapTask finished on driver
12 Jul 2022 14:46:14,026 Executor task launch worker for task 115.0 in stage 10.0 (TID 957) - Fetching outputs for shuffle 6
12 Jul 2022 14:46:14,026 Executor task launch worker for task 115.0 in stage 10.0 (TID 957) - Convert map statuses for shuffle 6, mappers 0-1, partitions 115-116
12 Jul 2022 14:46:14,026 Executor task launch worker for task 115.0 in stage 10.0 (TID 957) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
12 Jul 2022 14:46:14,027 Executor task launch worker for task 115.0 in stage 10.0 (TID 957) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
12 Jul 2022 14:46:14,027 Executor task launch worker for task 115.0 in stage 10.0 (TID 957) - Started 0 remote fetches in 0 ms
12 Jul 2022 14:46:14,027 Executor task launch worker for task 115.0 in stage 10.0 (TID 957) - Start fetching local blocks: 
12 Jul 2022 14:46:14,027 Executor task launch worker for task 115.0 in stage 10.0 (TID 957) - Got local blocks in 0 ms
12 Jul 2022 14:46:14,027 Executor task launch worker for task 115.0 in stage 10.0 (TID 957) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

12 Jul 2022 14:46:14,028 Executor task launch worker for task 115.0 in stage 10.0 (TID 957) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

12 Jul 2022 14:46:14,028 Executor task launch worker for task 115.0 in stage 10.0 (TID 957) - Task 957 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@31b9f9f1
12 Jul 2022 14:46:14,028 Executor task launch worker for task 115.0 in stage 10.0 (TID 957) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

12 Jul 2022 14:46:14,028 Executor task launch worker for task 115.0 in stage 10.0 (TID 957) - Task 957 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@31b9f9f1
12 Jul 2022 14:46:14,028 Executor task launch worker for task 115.0 in stage 10.0 (TID 957) - Writing shuffle index file for mapId 957 with length 1
12 Jul 2022 14:46:14,028 Executor task launch worker for task 115.0 in stage 10.0 (TID 957) - Shuffle index for mapId 957: [0]
12 Jul 2022 14:46:14,029 Executor task launch worker for task 115.0 in stage 10.0 (TID 957) - Finished task 115.0 in stage 10.0 (TID 957). 3956 bytes result sent to driver
12 Jul 2022 14:46:14,029 Executor task launch worker for task 115.0 in stage 10.0 (TID 957) - removing (10, 0) from stageTCMP
12 Jul 2022 14:46:14,029 dispatcher-event-loop-0 - parentName: , name: TaskSet_10.0, runningTasks: 0
12 Jul 2022 14:46:14,029 dispatcher-event-loop-0 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
12 Jul 2022 14:46:14,029 dispatcher-event-loop-0 - Moving to ANY after waiting for 0ms
12 Jul 2022 14:46:14,029 dispatcher-event-loop-0 - Starting task 118.0 in stage 10.0 (TID 958) (MTD-Minhnx12, executor driver, partition 118, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
12 Jul 2022 14:46:14,029 Executor task launch worker for task 118.0 in stage 10.0 (TID 958) - Running task 118.0 in stage 10.0 (TID 958)
12 Jul 2022 14:46:14,029 task-result-getter-1 - Finished task 115.0 in stage 10.0 (TID 957) in 5 ms on MTD-Minhnx12 (executor driver) (152/200)
12 Jul 2022 14:46:14,029 Executor task launch worker for task 118.0 in stage 10.0 (TID 958) - stageTCMP: (10, 0) -> 1
12 Jul 2022 14:46:14,029 dag-scheduler-event-loop - ShuffleMapTask finished on driver
12 Jul 2022 14:46:14,031 Executor task launch worker for task 118.0 in stage 10.0 (TID 958) - Fetching outputs for shuffle 6
12 Jul 2022 14:46:14,031 Executor task launch worker for task 118.0 in stage 10.0 (TID 958) - Convert map statuses for shuffle 6, mappers 0-1, partitions 118-119
12 Jul 2022 14:46:14,031 Executor task launch worker for task 118.0 in stage 10.0 (TID 958) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
12 Jul 2022 14:46:14,031 Executor task launch worker for task 118.0 in stage 10.0 (TID 958) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
12 Jul 2022 14:46:14,031 Executor task launch worker for task 118.0 in stage 10.0 (TID 958) - Started 0 remote fetches in 0 ms
12 Jul 2022 14:46:14,031 Executor task launch worker for task 118.0 in stage 10.0 (TID 958) - Start fetching local blocks: 
12 Jul 2022 14:46:14,031 Executor task launch worker for task 118.0 in stage 10.0 (TID 958) - Got local blocks in 0 ms
12 Jul 2022 14:46:14,031 Executor task launch worker for task 118.0 in stage 10.0 (TID 958) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

12 Jul 2022 14:46:14,032 Executor task launch worker for task 118.0 in stage 10.0 (TID 958) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

12 Jul 2022 14:46:14,032 Executor task launch worker for task 118.0 in stage 10.0 (TID 958) - Task 958 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@445bd05c
12 Jul 2022 14:46:14,033 Executor task launch worker for task 118.0 in stage 10.0 (TID 958) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

12 Jul 2022 14:46:14,033 Executor task launch worker for task 118.0 in stage 10.0 (TID 958) - Task 958 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@445bd05c
12 Jul 2022 14:46:14,033 Executor task launch worker for task 118.0 in stage 10.0 (TID 958) - Writing shuffle index file for mapId 958 with length 1
12 Jul 2022 14:46:14,033 Executor task launch worker for task 118.0 in stage 10.0 (TID 958) - Shuffle index for mapId 958: [0]
12 Jul 2022 14:46:14,033 Executor task launch worker for task 118.0 in stage 10.0 (TID 958) - Finished task 118.0 in stage 10.0 (TID 958). 3956 bytes result sent to driver
12 Jul 2022 14:46:14,033 Executor task launch worker for task 118.0 in stage 10.0 (TID 958) - removing (10, 0) from stageTCMP
12 Jul 2022 14:46:14,033 dispatcher-event-loop-0 - parentName: , name: TaskSet_10.0, runningTasks: 0
12 Jul 2022 14:46:14,034 dispatcher-event-loop-0 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
12 Jul 2022 14:46:14,034 dispatcher-event-loop-0 - Moving to ANY after waiting for 0ms
12 Jul 2022 14:46:14,034 dispatcher-event-loop-0 - Starting task 119.0 in stage 10.0 (TID 959) (MTD-Minhnx12, executor driver, partition 119, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
12 Jul 2022 14:46:14,034 Executor task launch worker for task 119.0 in stage 10.0 (TID 959) - Running task 119.0 in stage 10.0 (TID 959)
12 Jul 2022 14:46:14,034 task-result-getter-2 - Finished task 118.0 in stage 10.0 (TID 958) in 5 ms on MTD-Minhnx12 (executor driver) (153/200)
12 Jul 2022 14:46:14,034 Executor task launch worker for task 119.0 in stage 10.0 (TID 959) - stageTCMP: (10, 0) -> 1
12 Jul 2022 14:46:14,034 dag-scheduler-event-loop - ShuffleMapTask finished on driver
12 Jul 2022 14:46:14,035 Executor task launch worker for task 119.0 in stage 10.0 (TID 959) - Fetching outputs for shuffle 6
12 Jul 2022 14:46:14,035 Executor task launch worker for task 119.0 in stage 10.0 (TID 959) - Convert map statuses for shuffle 6, mappers 0-1, partitions 119-120
12 Jul 2022 14:46:14,036 Executor task launch worker for task 119.0 in stage 10.0 (TID 959) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
12 Jul 2022 14:46:14,036 Executor task launch worker for task 119.0 in stage 10.0 (TID 959) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
12 Jul 2022 14:46:14,036 Executor task launch worker for task 119.0 in stage 10.0 (TID 959) - Started 0 remote fetches in 0 ms
12 Jul 2022 14:46:14,036 Executor task launch worker for task 119.0 in stage 10.0 (TID 959) - Start fetching local blocks: 
12 Jul 2022 14:46:14,036 Executor task launch worker for task 119.0 in stage 10.0 (TID 959) - Got local blocks in 0 ms
12 Jul 2022 14:46:14,036 Executor task launch worker for task 119.0 in stage 10.0 (TID 959) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

12 Jul 2022 14:46:14,037 Executor task launch worker for task 119.0 in stage 10.0 (TID 959) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

12 Jul 2022 14:46:14,037 Executor task launch worker for task 119.0 in stage 10.0 (TID 959) - Task 959 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@5b5acaec
12 Jul 2022 14:46:14,037 Executor task launch worker for task 119.0 in stage 10.0 (TID 959) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

12 Jul 2022 14:46:14,037 Executor task launch worker for task 119.0 in stage 10.0 (TID 959) - Task 959 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@5b5acaec
12 Jul 2022 14:46:14,037 Executor task launch worker for task 119.0 in stage 10.0 (TID 959) - Writing shuffle index file for mapId 959 with length 1
12 Jul 2022 14:46:14,038 Executor task launch worker for task 119.0 in stage 10.0 (TID 959) - Shuffle index for mapId 959: [0]
12 Jul 2022 14:46:14,038 Executor task launch worker for task 119.0 in stage 10.0 (TID 959) - Finished task 119.0 in stage 10.0 (TID 959). 3956 bytes result sent to driver
12 Jul 2022 14:46:14,038 Executor task launch worker for task 119.0 in stage 10.0 (TID 959) - removing (10, 0) from stageTCMP
12 Jul 2022 14:46:14,038 dispatcher-event-loop-0 - parentName: , name: TaskSet_10.0, runningTasks: 0
12 Jul 2022 14:46:14,038 dispatcher-event-loop-0 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
12 Jul 2022 14:46:14,038 dispatcher-event-loop-0 - Moving to ANY after waiting for 0ms
12 Jul 2022 14:46:14,038 dispatcher-event-loop-0 - Starting task 123.0 in stage 10.0 (TID 960) (MTD-Minhnx12, executor driver, partition 123, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
12 Jul 2022 14:46:14,038 Executor task launch worker for task 123.0 in stage 10.0 (TID 960) - Running task 123.0 in stage 10.0 (TID 960)
12 Jul 2022 14:46:14,039 task-result-getter-3 - Finished task 119.0 in stage 10.0 (TID 959) in 4 ms on MTD-Minhnx12 (executor driver) (154/200)
12 Jul 2022 14:46:14,039 Executor task launch worker for task 123.0 in stage 10.0 (TID 960) - stageTCMP: (10, 0) -> 1
12 Jul 2022 14:46:14,039 dag-scheduler-event-loop - ShuffleMapTask finished on driver
12 Jul 2022 14:46:14,041 Executor task launch worker for task 123.0 in stage 10.0 (TID 960) - Fetching outputs for shuffle 6
12 Jul 2022 14:46:14,041 Executor task launch worker for task 123.0 in stage 10.0 (TID 960) - Convert map statuses for shuffle 6, mappers 0-1, partitions 123-124
12 Jul 2022 14:46:14,041 Executor task launch worker for task 123.0 in stage 10.0 (TID 960) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
12 Jul 2022 14:46:14,041 Executor task launch worker for task 123.0 in stage 10.0 (TID 960) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
12 Jul 2022 14:46:14,041 Executor task launch worker for task 123.0 in stage 10.0 (TID 960) - Started 0 remote fetches in 0 ms
12 Jul 2022 14:46:14,041 Executor task launch worker for task 123.0 in stage 10.0 (TID 960) - Start fetching local blocks: 
12 Jul 2022 14:46:14,041 Executor task launch worker for task 123.0 in stage 10.0 (TID 960) - Got local blocks in 0 ms
12 Jul 2022 14:46:14,042 Executor task launch worker for task 123.0 in stage 10.0 (TID 960) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

12 Jul 2022 14:46:14,043 Executor task launch worker for task 123.0 in stage 10.0 (TID 960) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

12 Jul 2022 14:46:14,043 Executor task launch worker for task 123.0 in stage 10.0 (TID 960) - Task 960 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@7955c34b
12 Jul 2022 14:46:14,044 Executor task launch worker for task 123.0 in stage 10.0 (TID 960) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

12 Jul 2022 14:46:14,044 Executor task launch worker for task 123.0 in stage 10.0 (TID 960) - Task 960 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@7955c34b
12 Jul 2022 14:46:14,044 Executor task launch worker for task 123.0 in stage 10.0 (TID 960) - Writing shuffle index file for mapId 960 with length 1
12 Jul 2022 14:46:14,044 Executor task launch worker for task 123.0 in stage 10.0 (TID 960) - Shuffle index for mapId 960: [0]
12 Jul 2022 14:46:14,044 Executor task launch worker for task 123.0 in stage 10.0 (TID 960) - Finished task 123.0 in stage 10.0 (TID 960). 3956 bytes result sent to driver
12 Jul 2022 14:46:14,044 Executor task launch worker for task 123.0 in stage 10.0 (TID 960) - removing (10, 0) from stageTCMP
12 Jul 2022 14:46:14,045 dispatcher-event-loop-0 - parentName: , name: TaskSet_10.0, runningTasks: 0
12 Jul 2022 14:46:14,045 dispatcher-event-loop-0 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
12 Jul 2022 14:46:14,045 dispatcher-event-loop-0 - Moving to ANY after waiting for 0ms
12 Jul 2022 14:46:14,045 dispatcher-event-loop-0 - Starting task 126.0 in stage 10.0 (TID 961) (MTD-Minhnx12, executor driver, partition 126, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
12 Jul 2022 14:46:14,045 task-result-getter-0 - Finished task 123.0 in stage 10.0 (TID 960) in 7 ms on MTD-Minhnx12 (executor driver) (155/200)
12 Jul 2022 14:46:14,045 Executor task launch worker for task 126.0 in stage 10.0 (TID 961) - Running task 126.0 in stage 10.0 (TID 961)
12 Jul 2022 14:46:14,045 dag-scheduler-event-loop - ShuffleMapTask finished on driver
12 Jul 2022 14:46:14,045 Executor task launch worker for task 126.0 in stage 10.0 (TID 961) - stageTCMP: (10, 0) -> 1
12 Jul 2022 14:46:14,047 Executor task launch worker for task 126.0 in stage 10.0 (TID 961) - Fetching outputs for shuffle 6
12 Jul 2022 14:46:14,047 Executor task launch worker for task 126.0 in stage 10.0 (TID 961) - Convert map statuses for shuffle 6, mappers 0-1, partitions 126-127
12 Jul 2022 14:46:14,047 Executor task launch worker for task 126.0 in stage 10.0 (TID 961) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
12 Jul 2022 14:46:14,047 Executor task launch worker for task 126.0 in stage 10.0 (TID 961) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
12 Jul 2022 14:46:14,047 Executor task launch worker for task 126.0 in stage 10.0 (TID 961) - Started 0 remote fetches in 0 ms
12 Jul 2022 14:46:14,047 Executor task launch worker for task 126.0 in stage 10.0 (TID 961) - Start fetching local blocks: 
12 Jul 2022 14:46:14,048 Executor task launch worker for task 126.0 in stage 10.0 (TID 961) - Got local blocks in 0 ms
12 Jul 2022 14:46:14,048 Executor task launch worker for task 126.0 in stage 10.0 (TID 961) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

12 Jul 2022 14:46:14,049 Executor task launch worker for task 126.0 in stage 10.0 (TID 961) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

12 Jul 2022 14:46:14,049 Executor task launch worker for task 126.0 in stage 10.0 (TID 961) - Task 961 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@40f6ff22
12 Jul 2022 14:46:14,049 Executor task launch worker for task 126.0 in stage 10.0 (TID 961) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

12 Jul 2022 14:46:14,049 Executor task launch worker for task 126.0 in stage 10.0 (TID 961) - Task 961 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@40f6ff22
12 Jul 2022 14:46:14,049 Executor task launch worker for task 126.0 in stage 10.0 (TID 961) - Writing shuffle index file for mapId 961 with length 1
12 Jul 2022 14:46:14,049 Executor task launch worker for task 126.0 in stage 10.0 (TID 961) - Shuffle index for mapId 961: [0]
12 Jul 2022 14:46:14,050 Executor task launch worker for task 126.0 in stage 10.0 (TID 961) - Finished task 126.0 in stage 10.0 (TID 961). 3956 bytes result sent to driver
12 Jul 2022 14:46:14,050 Executor task launch worker for task 126.0 in stage 10.0 (TID 961) - removing (10, 0) from stageTCMP
12 Jul 2022 14:46:14,050 dispatcher-event-loop-0 - parentName: , name: TaskSet_10.0, runningTasks: 0
12 Jul 2022 14:46:14,050 dispatcher-event-loop-0 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
12 Jul 2022 14:46:14,050 dispatcher-event-loop-0 - Moving to ANY after waiting for 0ms
12 Jul 2022 14:46:14,050 dispatcher-event-loop-0 - Starting task 127.0 in stage 10.0 (TID 962) (MTD-Minhnx12, executor driver, partition 127, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
12 Jul 2022 14:46:14,050 Executor task launch worker for task 127.0 in stage 10.0 (TID 962) - Running task 127.0 in stage 10.0 (TID 962)
12 Jul 2022 14:46:14,050 task-result-getter-1 - Finished task 126.0 in stage 10.0 (TID 961) in 5 ms on MTD-Minhnx12 (executor driver) (156/200)
12 Jul 2022 14:46:14,050 Executor task launch worker for task 127.0 in stage 10.0 (TID 962) - stageTCMP: (10, 0) -> 1
12 Jul 2022 14:46:14,050 dag-scheduler-event-loop - ShuffleMapTask finished on driver
12 Jul 2022 14:46:14,052 Executor task launch worker for task 127.0 in stage 10.0 (TID 962) - Fetching outputs for shuffle 6
12 Jul 2022 14:46:14,052 Executor task launch worker for task 127.0 in stage 10.0 (TID 962) - Convert map statuses for shuffle 6, mappers 0-1, partitions 127-128
12 Jul 2022 14:46:14,052 Executor task launch worker for task 127.0 in stage 10.0 (TID 962) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
12 Jul 2022 14:46:14,052 Executor task launch worker for task 127.0 in stage 10.0 (TID 962) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
12 Jul 2022 14:46:14,052 Executor task launch worker for task 127.0 in stage 10.0 (TID 962) - Started 0 remote fetches in 0 ms
12 Jul 2022 14:46:14,052 Executor task launch worker for task 127.0 in stage 10.0 (TID 962) - Start fetching local blocks: 
12 Jul 2022 14:46:14,052 Executor task launch worker for task 127.0 in stage 10.0 (TID 962) - Got local blocks in 0 ms
12 Jul 2022 14:46:14,053 Executor task launch worker for task 127.0 in stage 10.0 (TID 962) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

12 Jul 2022 14:46:14,053 Executor task launch worker for task 127.0 in stage 10.0 (TID 962) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

12 Jul 2022 14:46:14,053 Executor task launch worker for task 127.0 in stage 10.0 (TID 962) - Task 962 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@150bf9d9
12 Jul 2022 14:46:14,054 Executor task launch worker for task 127.0 in stage 10.0 (TID 962) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

12 Jul 2022 14:46:14,054 Executor task launch worker for task 127.0 in stage 10.0 (TID 962) - Task 962 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@150bf9d9
12 Jul 2022 14:46:14,054 Executor task launch worker for task 127.0 in stage 10.0 (TID 962) - Writing shuffle index file for mapId 962 with length 1
12 Jul 2022 14:46:14,054 Executor task launch worker for task 127.0 in stage 10.0 (TID 962) - Shuffle index for mapId 962: [0]
12 Jul 2022 14:46:14,054 Executor task launch worker for task 127.0 in stage 10.0 (TID 962) - Finished task 127.0 in stage 10.0 (TID 962). 3956 bytes result sent to driver
12 Jul 2022 14:46:14,054 Executor task launch worker for task 127.0 in stage 10.0 (TID 962) - removing (10, 0) from stageTCMP
12 Jul 2022 14:46:14,054 dispatcher-event-loop-0 - parentName: , name: TaskSet_10.0, runningTasks: 0
12 Jul 2022 14:46:14,054 dispatcher-event-loop-0 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
12 Jul 2022 14:46:14,054 dispatcher-event-loop-0 - Moving to ANY after waiting for 0ms
12 Jul 2022 14:46:14,055 dispatcher-event-loop-0 - Starting task 128.0 in stage 10.0 (TID 963) (MTD-Minhnx12, executor driver, partition 128, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
12 Jul 2022 14:46:14,055 Executor task launch worker for task 128.0 in stage 10.0 (TID 963) - Running task 128.0 in stage 10.0 (TID 963)
12 Jul 2022 14:46:14,055 task-result-getter-2 - Finished task 127.0 in stage 10.0 (TID 962) in 5 ms on MTD-Minhnx12 (executor driver) (157/200)
12 Jul 2022 14:46:14,055 Executor task launch worker for task 128.0 in stage 10.0 (TID 963) - stageTCMP: (10, 0) -> 1
12 Jul 2022 14:46:14,055 dag-scheduler-event-loop - ShuffleMapTask finished on driver
12 Jul 2022 14:46:14,056 Executor task launch worker for task 128.0 in stage 10.0 (TID 963) - Fetching outputs for shuffle 6
12 Jul 2022 14:46:14,056 Executor task launch worker for task 128.0 in stage 10.0 (TID 963) - Convert map statuses for shuffle 6, mappers 0-1, partitions 128-129
12 Jul 2022 14:46:14,056 Executor task launch worker for task 128.0 in stage 10.0 (TID 963) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
12 Jul 2022 14:46:14,057 Executor task launch worker for task 128.0 in stage 10.0 (TID 963) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
12 Jul 2022 14:46:14,057 Executor task launch worker for task 128.0 in stage 10.0 (TID 963) - Started 0 remote fetches in 0 ms
12 Jul 2022 14:46:14,057 Executor task launch worker for task 128.0 in stage 10.0 (TID 963) - Start fetching local blocks: 
12 Jul 2022 14:46:14,057 Executor task launch worker for task 128.0 in stage 10.0 (TID 963) - Got local blocks in 0 ms
12 Jul 2022 14:46:14,057 Executor task launch worker for task 128.0 in stage 10.0 (TID 963) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

12 Jul 2022 14:46:14,058 Executor task launch worker for task 128.0 in stage 10.0 (TID 963) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

12 Jul 2022 14:46:14,058 Executor task launch worker for task 128.0 in stage 10.0 (TID 963) - Task 963 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@25a57678
12 Jul 2022 14:46:14,058 Executor task launch worker for task 128.0 in stage 10.0 (TID 963) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

12 Jul 2022 14:46:14,058 Executor task launch worker for task 128.0 in stage 10.0 (TID 963) - Task 963 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@25a57678
12 Jul 2022 14:46:14,058 Executor task launch worker for task 128.0 in stage 10.0 (TID 963) - Writing shuffle index file for mapId 963 with length 1
12 Jul 2022 14:46:14,058 Executor task launch worker for task 128.0 in stage 10.0 (TID 963) - Shuffle index for mapId 963: [0]
12 Jul 2022 14:46:14,059 Executor task launch worker for task 128.0 in stage 10.0 (TID 963) - Finished task 128.0 in stage 10.0 (TID 963). 3956 bytes result sent to driver
12 Jul 2022 14:46:14,059 Executor task launch worker for task 128.0 in stage 10.0 (TID 963) - removing (10, 0) from stageTCMP
12 Jul 2022 14:46:14,059 dispatcher-event-loop-0 - parentName: , name: TaskSet_10.0, runningTasks: 0
12 Jul 2022 14:46:14,059 dispatcher-event-loop-0 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
12 Jul 2022 14:46:14,059 dispatcher-event-loop-0 - Moving to ANY after waiting for 0ms
12 Jul 2022 14:46:14,059 dispatcher-event-loop-0 - Starting task 130.0 in stage 10.0 (TID 964) (MTD-Minhnx12, executor driver, partition 130, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
12 Jul 2022 14:46:14,059 Executor task launch worker for task 130.0 in stage 10.0 (TID 964) - Running task 130.0 in stage 10.0 (TID 964)
12 Jul 2022 14:46:14,059 task-result-getter-3 - Finished task 128.0 in stage 10.0 (TID 963) in 4 ms on MTD-Minhnx12 (executor driver) (158/200)
12 Jul 2022 14:46:14,059 Executor task launch worker for task 130.0 in stage 10.0 (TID 964) - stageTCMP: (10, 0) -> 1
12 Jul 2022 14:46:14,059 dag-scheduler-event-loop - ShuffleMapTask finished on driver
12 Jul 2022 14:46:14,061 Executor task launch worker for task 130.0 in stage 10.0 (TID 964) - Fetching outputs for shuffle 6
12 Jul 2022 14:46:14,061 Executor task launch worker for task 130.0 in stage 10.0 (TID 964) - Convert map statuses for shuffle 6, mappers 0-1, partitions 130-131
12 Jul 2022 14:46:14,061 Executor task launch worker for task 130.0 in stage 10.0 (TID 964) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
12 Jul 2022 14:46:14,061 Executor task launch worker for task 130.0 in stage 10.0 (TID 964) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
12 Jul 2022 14:46:14,061 Executor task launch worker for task 130.0 in stage 10.0 (TID 964) - Started 0 remote fetches in 0 ms
12 Jul 2022 14:46:14,061 Executor task launch worker for task 130.0 in stage 10.0 (TID 964) - Start fetching local blocks: 
12 Jul 2022 14:46:14,061 Executor task launch worker for task 130.0 in stage 10.0 (TID 964) - Got local blocks in 0 ms
12 Jul 2022 14:46:14,062 Executor task launch worker for task 130.0 in stage 10.0 (TID 964) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

12 Jul 2022 14:46:14,062 Executor task launch worker for task 130.0 in stage 10.0 (TID 964) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

12 Jul 2022 14:46:14,062 Executor task launch worker for task 130.0 in stage 10.0 (TID 964) - Task 964 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@56cd6fb7
12 Jul 2022 14:46:14,063 Executor task launch worker for task 130.0 in stage 10.0 (TID 964) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

12 Jul 2022 14:46:14,063 Executor task launch worker for task 130.0 in stage 10.0 (TID 964) - Task 964 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@56cd6fb7
12 Jul 2022 14:46:14,063 Executor task launch worker for task 130.0 in stage 10.0 (TID 964) - Writing shuffle index file for mapId 964 with length 1
12 Jul 2022 14:46:14,063 Executor task launch worker for task 130.0 in stage 10.0 (TID 964) - Shuffle index for mapId 964: [0]
12 Jul 2022 14:46:14,063 Executor task launch worker for task 130.0 in stage 10.0 (TID 964) - Finished task 130.0 in stage 10.0 (TID 964). 3956 bytes result sent to driver
12 Jul 2022 14:46:14,063 Executor task launch worker for task 130.0 in stage 10.0 (TID 964) - removing (10, 0) from stageTCMP
12 Jul 2022 14:46:14,063 dispatcher-event-loop-0 - parentName: , name: TaskSet_10.0, runningTasks: 0
12 Jul 2022 14:46:14,063 dispatcher-event-loop-0 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
12 Jul 2022 14:46:14,063 dispatcher-event-loop-0 - Moving to ANY after waiting for 0ms
12 Jul 2022 14:46:14,063 dispatcher-event-loop-0 - Starting task 134.0 in stage 10.0 (TID 965) (MTD-Minhnx12, executor driver, partition 134, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
12 Jul 2022 14:46:14,064 Executor task launch worker for task 134.0 in stage 10.0 (TID 965) - Running task 134.0 in stage 10.0 (TID 965)
12 Jul 2022 14:46:14,064 task-result-getter-0 - Finished task 130.0 in stage 10.0 (TID 964) in 5 ms on MTD-Minhnx12 (executor driver) (159/200)
12 Jul 2022 14:46:14,064 Executor task launch worker for task 134.0 in stage 10.0 (TID 965) - stageTCMP: (10, 0) -> 1
12 Jul 2022 14:46:14,064 dag-scheduler-event-loop - ShuffleMapTask finished on driver
12 Jul 2022 14:46:14,065 Executor task launch worker for task 134.0 in stage 10.0 (TID 965) - Fetching outputs for shuffle 6
12 Jul 2022 14:46:14,065 Executor task launch worker for task 134.0 in stage 10.0 (TID 965) - Convert map statuses for shuffle 6, mappers 0-1, partitions 134-135
12 Jul 2022 14:46:14,065 Executor task launch worker for task 134.0 in stage 10.0 (TID 965) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
12 Jul 2022 14:46:14,065 Executor task launch worker for task 134.0 in stage 10.0 (TID 965) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
12 Jul 2022 14:46:14,065 Executor task launch worker for task 134.0 in stage 10.0 (TID 965) - Started 0 remote fetches in 0 ms
12 Jul 2022 14:46:14,065 Executor task launch worker for task 134.0 in stage 10.0 (TID 965) - Start fetching local blocks: 
12 Jul 2022 14:46:14,065 Executor task launch worker for task 134.0 in stage 10.0 (TID 965) - Got local blocks in 0 ms
12 Jul 2022 14:46:14,066 Executor task launch worker for task 134.0 in stage 10.0 (TID 965) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

12 Jul 2022 14:46:14,066 Executor task launch worker for task 134.0 in stage 10.0 (TID 965) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

